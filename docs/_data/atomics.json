{
  "box-shadow": [
    {
      "class": "bs-none",
      "output": "box-shadow: none;"
    },
    {
      "class": "bs-sm",
      "output": "box-shadow: 0 @su2 @su8 fade(@black-700, 10%);",
      "hover": true
    },
    {
      "class": "bs-md",
      "output": "box-shadow: 0 @su4 @su8 fade(@black-700, 20%);",
      "hover": true
    },
    {
      "class": "bs-lg",
      "output": "box-shadow: 0 @su4 @su12 fade(@black-800, 20%);",
      "hover": true
    },
    {
      "class": "bs-ring",
      "output": "box-shadow: 0 0 0 @su4 var(--focus-ring);",
      "hover": true,
      "focus": true
    }
  ],
  "box-sizing": [
    {
      "class": "box-content",
      "output": "box-sizing: content-box;",
      "define": "<p class='mb0'>Indicates that the element's width and height affects only the element's content box, that is the area minus the element's margin, padding, and borders. <em>This is the default browser value.</em></p>",
      "responsive": false
    },
    {
      "class": "box-border",
      "output": "box-sizing: border-box;",
      "define": "<p class='mb0'>Indicates that the element's width and height affects the entire element. <emThis is the <strong>preferred</strong> default value for Stacks.</em</p>",
      "responsive": false
    },
    {
      "class": "box-unset",
      "output": "box-sizing: unset;",
      "define": "<p class='mb0'>Removes the previously set <code class='stacks-code'>box-sizing</code> value, reverting it back to the initial browser value.</p>",
      "responsive": false
    }
  ],
  "cursors": [
    {
      "class": "c-auto",
      "output": "cursor: auto;",
      "responsive": false
    },
    {
      "class": "c-default",
      "output": "cursor: default;",
      "responsive": false
    },
    {
      "class": "c-pointer",
      "output": "cursor: pointer;",
      "responsive": false
    },
    {
      "class": "c-wait",
      "output": "cursor: wait;",
      "responsive": false
    },
    {
      "class": "c-move",
      "output": "cursor: move;",
      "responsive": false
    },
    {
      "class": "c-not-allowed",
      "output": "cursor: not-allowed;",
      "responsive": false
    },
    {
      "class": "c-help",
      "output": "cursor: help;",
      "responsive": false
    }
  ],
  "visibility": [
    {
      "class": "v-visible",
      "definition": "The element visible",
      "responsive": false
    },
    {
      "class": "v-visible-sr",
      "definition": "The element is visible only to screen readers",
      "responsive": false
    },
    {
      "class": "v-hidden",
      "definition": "The element is invisible, but still affects layout as normal",
      "responsive": false
    }
  ],
  "pointer-events": [
    {
      "class": "pe-auto",
      "output": "pointer-events: auto;",
      "define": "<p class='mb0'>The element behaves as it would if the pointer-events property were not specified.</p>",
      "responsive": false
    },
    {
      "class": "pe-none",
      "output": "pointer-events: none;",
      "define": "<p class='mb0'>Disables mouse events (clicking, dragging, hovering, etc.) on the element and its decendents.</p>",
      "responsive": false
    }
  ],
  "user-select": [
    {
      "class": "us-auto",
      "output": "user-select: auto;",
      "define": "<p class='mb0'>The element behaves as it would if the user-select property were not specified.</p>",
      "responsive": false
    },
    {
      "class": "us-none",
      "output": "user-select: none;",
      "define": "<p class='mb0'>The text of the element and its sub-elements is not selectable. It may be appropriate to combine with <code class='stacks-code'>.c-default</code></p>",
      "responsive": false
    }
  ],
  "user-drag": [
    {
      "class": "ud-auto",
      "output": "user-drag: auto;",
      "define": "<p class='mb0'>The element behaves as it would if the user-drag property were not specified.</p>",
      "responsive": false
    },
    {
      "class": "ud-none",
      "output": "user-drag: none;",
      "define": "<p class='mb0'>The element and its sub-elements are not draggable. When applied to an image, the ghosted image will not appear in a loaded mouse cursor.</p>",
      "responsive": false
    }
  ],
  "display": [
    {
      "class": "d-block",
      "output": "display: block;",
      "define": "<p class='mb0'>This turns any element into a block-level element.</p>",
      "responsive": true,
      "print": true
    },
    {
      "class": "d-inline",
      "output": "display: inline;",
      "define": "<p class='mb0'>This turns any element into an inline element that flows like text.</p>",
      "responsive": true
    },
    {
      "class": "d-inline-block",
      "output": "display: inline-block;",
      "define": "<p class='mb0'>This turns any element into a block-level box that will be flowed with surrounding content as if it were a single inline box (behaving much like a replaced element would)</p>",
      "responsive": true
    },
    {
      "class": "d-flex",
      "output": "display: flex;",
      "define": "<p class='mb0'>The lays out an element and its contents using flow layout.</p>",
      "responsive": false
    },
    {
      "class": "d-inline-flex",
      "output": "display: inline-flex;",
      "define": "<p class='mb0'>This makes the element behave like an inline element and lays out its content according to the flexbox model.</p>",
      "responsive": false
    },
    {
      "class": "d-table",
      "output": "display: table;",
      "define": "<p class='mb0'>This makes your element behave like <code class='stacks-code'>table</code> HTML elements. It defines a block-level box.</p>",
      "responsive": false
    },
    {
      "class": "d-table-cell",
      "output": "display: table-cell;",
      "define": "<p class='mb0'>These elements behave like <code class='stacks-code'>td</code> HTML elements.</p>",
      "responsive": false
    },
    {
      "class": "d-none",
      "output": "display: none;",
      "define": "<p class='mb0'>Effectively removes the element from the DOM. Useful for showing / hiding elements.</p><p class='mb0'>To hide things when the page is printed, apply <code class='stacks-code'>.print:d-none</code></p>",
      "responsive": true,
      "print": true
    },
    {
      "class": "d-unset",
      "output": "display: unset;",
      "define": "<p class='mb0'>Removes any display property from the element.</p>",
      "responsive": false
    }
  ],
  "floats": [
    {
      "class": "float-left",
      "output": "float: left;",
      "define": "<p class='mb0'>Indicates that the element must float on the left side of the parent container.</p>",
      "responsive": false
    },
    {
      "class": "float-right",
      "output": "float: right;",
      "define": "<p class='mb0'>Indicates that the element must float on the right side of the parent container.</p>",
      "responsive": false
    },
    {
      "class": "float-none",
      "output": "float: none;",
      "define": "<p class='mb0'>Indicates that the element must not float.</p>",
      "responsive": false
    },
    {
      "class": "clearfix",
      "output": ".clearfix();",
      "define": "<p class='mb0'>This class calls the <code class='stacks-code'>.clearfix();</code> mixin, which fixes a layout bug. Floating an object takes it out of the DOM order. When all child itmes within a parent container contain a float property then, the parent container will collapse. The <code class='stacks-code'>.clearfix</code> class forces the parent container to not collapse.</p>",
      "responsive": false
    },
    {
      "class": "clear-left",
      "output": "clear: left;",
      "define": "<p class='mb0'>Indicates that the element must be moved down to clear past <em>left</em> floats.</p>",
      "responsive": false
    },
    {
      "class": "clear-right",
      "output": "clear: right;",
      "define": "<p class='mb0'>Indicates that the element must be moved down to clear past <em>right</em> floats.</p>",
      "responsive": false
    },
    {
      "class": "clear-both",
      "output": "clear: both;",
      "define": "<p class='mb0'>Indicates that the element must be moved down to clear past <em>left and right</em> floats.</p>",
      "responsive": false
    },
    {
      "class": "clear-none",
      "output": "clear: none;",
      "define": "<p class='mb0'>Indicates that the element is <em>not</em> moved to clear past floating elements.</p>",
      "responsive": false
    }
  ],
  "width": [
    {
      "class": "w0",
      "output": "width: 0;",
      "responsive": false
    },
    {
      "class": "w2",
      "output": "width: 2px;",
      "responsive": false
    },
    {
      "class": "w4",
      "output": "width: 4px;",
      "responsive": false
    },
    {
      "class": "w6",
      "output": "width: 6px;",
      "responsive": false
    },
    {
      "class": "w8",
      "output": "width: 8px;",
      "responsive": false
    },
    {
      "class": "w12",
      "output": "width: 12px;",
      "responsive": false
    },
    {
      "class": "w16",
      "output": "width: 16px;",
      "responsive": false
    },
    {
      "class": "w24",
      "output": "width: 24px;",
      "responsive": false
    },
    {
      "class": "w32",
      "output": "width: 32px;",
      "responsive": false
    },
    {
      "class": "w48",
      "output": "width: 48px;",
      "responsive": false
    },
    {
      "class": "w64",
      "output": "width: 64px;",
      "responsive": false
    },
    {
      "class": "w96",
      "output": "width: 96px;",
      "responsive": false
    },
    {
      "class": "w128",
      "output": "width: 128px;",
      "responsive": false
    }
  ],
  "width-percentage": [
    {
      "class": "w-auto",
      "output": "width: auto;",
      "responsive": true
    },
    {
      "class": "w0",
      "output": "width: 0;",
      "responsive": false
    },
    {
      "class": "w10",
      "output": "width: 10%;",
      "responsive": false
    },
    {
      "class": "w20",
      "output": "width: 20%;",
      "responsive": false
    },
    {
      "class": "w25",
      "output": "width: 25%;",
      "responsive": true
    },
    {
      "class": "w30",
      "output": "width: 30%;",
      "responsive": false
    },
    {
      "class": "w33",
      "output": "width: 33.33%;",
      "responsive": true
    },
    {
      "class": "w40",
      "output": "width: 40%",
      "responsive": false
    },
    {
      "class": "w50",
      "output": "width: 50%;",
      "responsive": true
    },
    {
      "class": "w60",
      "output": "width: 60%;",
      "responsive": false
    },
    {
      "class": "w66",
      "output": "width: 66.67%;",
      "responsive": true
    },
    {
      "class": "w70",
      "output": "width: 70%;",
      "responsive": false
    },
    {
      "class": "w75",
      "output": "width: 75%;",
      "responsive": true
    },
    {
      "class": "w80",
      "output": "width: 80%;",
      "responsive": false
    },
    {
      "class": "w90",
      "output": "width: 90%;",
      "responsive": false
    },
    {
      "class": "w100",
      "output": "width: 100%;",
      "responsive": true
    }
  ],
  "width-static": [
    {
      "class": "ws1",
      "output": "width: 105px;",
      "responsive": false
    },
    {
      "class": "ws2",
      "output": "width: 211px;",
      "responsive": false
    },
    {
      "class": "ws3",
      "output": "width: 316px;",
      "responsive": false
    },
    {
      "class": "ws4",
      "output": "width: 421px;",
      "responsive": false
    },
    {
      "class": "ws5",
      "output": "width: 527px;",
      "responsive": false
    },
    {
      "class": "ws6",
      "output": "width: 632px;",
      "responsive": false
    },
    {
      "class": "ws7",
      "output": "width: 737px;",
      "responsive": false
    },
    {
      "class": "ws8",
      "output": "width: 843px;",
      "responsive": false
    },
    {
      "class": "ws9",
      "output": "width: 948px;",
      "responsive": false
    },
    {
      "class": "ws10",
      "output": "width: 1053px;",
      "responsive": false
    },
    {
      "class": "ws11",
      "output": "width: 1159px;",
      "responsive": false
    },
    {
      "class": "ws12",
      "output": "width: 1264px;",
      "responsive": false
    }
  ],
  "width-max": [
    {
      "class": "wmx-initial",
      "output": "max-width: initial;",
      "responsive": true
    },
    {
      "class": "wmx1",
      "output": "max-width: 105px;",
      "responsive": false
    },
    {
      "class": "wmx2",
      "output": "max-width: 211px;",
      "responsive": false
    },
    {
      "class": "wmx25",
      "output": "max-width: 25%;",
      "responsive": false
    },
    {
      "class": "wmx3",
      "output": "max-width: 316px;",
      "responsive": false
    },
    {
      "class": "wmx4",
      "output": "max-width: 421px;",
      "responsive": false
    },
    {
      "class": "wmx5",
      "output": "max-width: 527px;",
      "responsive": false
    },
    {
      "class": "wmx50",
      "output": "max-width: 50%;",
      "responsive": false
    },
    {
      "class": "wmx6",
      "output": "max-width: 632px;",
      "responsive": false
    },
    {
      "class": "wmx7",
      "output": "max-width: 737px;",
      "responsive": false
    },
    {
      "class": "wmx8",
      "output": "max-width: 843px;",
      "responsive": false
    },
    {
      "class": "wmx75",
      "output": "max-width: 75%;",
      "responsive": false
    },
    {
      "class": "wmx9",
      "output": "max-width: 948px;",
      "responsive": false
    },
    {
      "class": "wmx10",
      "output": "max-width: 1053px;",
      "responsive": false
    },
    {
      "class": "wmx11",
      "output": "max-width: 1159px;",
      "responsive": false
    },
    {
      "class": "wmx12",
      "output": "max-width: 1264px;",
      "responsive": false
    },
    {
      "class": "wmx100",
      "output": "max-width: 100%;",
      "responsive": true
    }
  ],
  "width-min": [
    {
      "class": "wmn-initial",
      "output": "min-width: initial;",
      "responsive": true
    },
    {
      "class": "wmn0",
      "output": "min-width: 0;",
      "responsive": false
    },
    {
      "class": "wmn1",
      "output": "min-width: 105px;",
      "responsive": false
    },
    {
      "class": "wmn2",
      "output": "min-width: 211px;",
      "responsive": false
    },
    {
      "class": "wmn25",
      "output": "min-width: 25%;",
      "responsive": false
    },
    {
      "class": "wmn3",
      "output": "min-width: 316px;",
      "responsive": false
    },
    {
      "class": "wmn4",
      "output": "min-width: 421px;",
      "responsive": false
    },
    {
      "class": "wmn5",
      "output": "min-width: 527px;",
      "responsive": false
    },
    {
      "class": "wmn50",
      "output": "min-width: 50%;",
      "responsive": false
    },
    {
      "class": "wmn6",
      "output": "min-width: 632px;",
      "responsive": false
    },
    {
      "class": "wmn7",
      "output": "min-width: 737px;",
      "responsive": false
    },
    {
      "class": "wmn75",
      "output": "min-width: 75%;",
      "responsive": false
    },
    {
      "class": "wmn8",
      "output": "min-width: 843px;",
      "responsive": false
    },
    {
      "class": "wmn9",
      "output": "min-width: 948px;",
      "responsive": false
    },
    {
      "class": "wmn10",
      "output": "min-width: 1053px;",
      "responsive": false
    },
    {
      "class": "wmn11",
      "output": "min-width: 1159px;",
      "responsive": false
    },
    {
      "class": "wmn12",
      "output": "min-width: 1264px;",
      "responsive": false
    },
    {
      "class": "wmn100",
      "output": "min-width: 100%;",
      "responsive": true
    }
  ],
  "height-percentage": [
    {
      "class": "h-auto",
      "output": "height: auto;"
    },
    {
      "class": "h0",
      "output": "height: 0;"
    },
    {
      "class": "h100",
      "output": "height: 100%;"
    }
  ],
  "height-static": [
    {
      "class": "hs1",
      "output": "height: 105px;",
      "responsive": false
    },
    {
      "class": "hs2",
      "output": "height: 211px;",
      "responsive": false
    },
    {
      "class": "hs3",
      "output": "height: 316px;",
      "responsive": false
    },
    {
      "class": "hs4",
      "output": "height: 421px;",
      "responsive": false
    },
    {
      "class": "hs5",
      "output": "height: 527px;",
      "responsive": false
    },
    {
      "class": "hs6",
      "output": "height: 632px;",
      "responsive": false
    },
    {
      "class": "hs7",
      "output": "height: 737px;",
      "responsive": false
    },
    {
      "class": "hs8",
      "output": "height: 843px;",
      "responsive": false
    },
    {
      "class": "hs9",
      "output": "height: 948px;",
      "responsive": false
    },
    {
      "class": "hs10",
      "output": "height: 1053px;",
      "responsive": false
    },
    {
      "class": "hs11",
      "output": "height: 1159px;",
      "responsive": false
    },
    {
      "class": "hs12",
      "output": "height: 1264px;",
      "responsive": false
    }
  ],
  "height": [
    {
      "class": "h0",
      "output": "height: 0;",
      "responsive": false
    },
    {
      "class": "h2",
      "output": "height: 2px;",
      "responsive": false
    },
    {
      "class": "h4",
      "output": "height: 4px;",
      "responsive": false
    },
    {
      "class": "h6",
      "output": "height: 6px;",
      "responsive": false
    },
    {
      "class": "h8",
      "output": "height: 8px;",
      "responsive": false
    },
    {
      "class": "h12",
      "output": "height: 12px;",
      "responsive": false
    },
    {
      "class": "h16",
      "output": "height: 16px;",
      "responsive": false
    },
    {
      "class": "h24",
      "output": "height: 24px;",
      "responsive": false
    },
    {
      "class": "h32",
      "output": "height: 32px;",
      "responsive": false
    },
    {
      "class": "h48",
      "output": "height: 48px;",
      "responsive": false
    },
    {
      "class": "h64",
      "output": "height: 64px;",
      "responsive": false
    },
    {
      "class": "h96",
      "output": "height: 96px;",
      "responsive": false
    },
    {
      "class": "h128",
      "output": "height: 128px;",
      "responsive": false
    }
  ],
  "height-max": [
    {
      "class": "hmx-initial",
      "output": "max-height: initial;",
      "responsive": true
    },
    {
      "class": "hmx1",
      "output": "max-height: 105px;",
      "responsive": false
    },
    {
      "class": "hmx2",
      "output": "max-height: 211px;",
      "responsive": false
    },
    {
      "class": "hmx3",
      "output": "max-height: 316px;",
      "responsive": false
    },
    {
      "class": "hmx4",
      "output": "max-height: 421px;",
      "responsive": false
    },
    {
      "class": "hmx5",
      "output": "max-height: 527px;",
      "responsive": false
    },
    {
      "class": "hmx6",
      "output": "max-height: 632px;",
      "responsive": false
    },
    {
      "class": "hmx7",
      "output": "max-height: 737px;",
      "responsive": false
    },
    {
      "class": "hmx8",
      "output": "max-height: 843px;",
      "responsive": false
    },
    {
      "class": "hmx9",
      "output": "max-height: 948px;",
      "responsive": false
    },
    {
      "class": "hmx10",
      "output": "max-height: 1053px;",
      "responsive": false
    },
    {
      "class": "hmx11",
      "output": "max-height: 1159px;",
      "responsive": false
    },
    {
      "class": "hmx12",
      "output": "max-height: 1264px;",
      "responsive": false
    },
    {
      "class": "hmx100",
      "output": "max-height: 100%;",
      "responsive": true
    }
  ],
  "height-min": [
    {
      "class": "hmn-initial",
      "output": "min-height: initial;",
      "responsive": true
    },
    {
      "class": "hmn0",
      "output": "min-height: 0;",
      "responsive": false
    },
    {
      "class": "hmn1",
      "output": "min-height: 105px;",
      "responsive": false
    },
    {
      "class": "hmn2",
      "output": "min-height: 211px;",
      "responsive": false
    },
    {
      "class": "hmn3",
      "output": "min-height: 316px;",
      "responsive": false
    },
    {
      "class": "hmn4",
      "output": "min-height: 421px;",
      "responsive": false
    },
    {
      "class": "hmn5",
      "output": "min-height: 527px;",
      "responsive": false
    },
    {
      "class": "hmn6",
      "output": "min-height: 632px;",
      "responsive": false
    },
    {
      "class": "hmn7",
      "output": "min-height: 737px;",
      "responsive": false
    },
    {
      "class": "hmn8",
      "output": "min-height: 843px;",
      "responsive": false
    },
    {
      "class": "hmn9",
      "output": "min-height: 948px;",
      "responsive": false
    },
    {
      "class": "hmn10",
      "output": "min-height: 1053px;",
      "responsive": false
    },
    {
      "class": "hmn11",
      "output": "min-height: 1159px;",
      "responsive": false
    },
    {
      "class": "hmn12",
      "output": "min-height: 1264px;",
      "responsive": false
    },
    {
      "class": "hmn100",
      "output": "min-height: 100%;",
      "responsive": true
    }
  ],
  "opacity": [
    {
      "class": "o0",
      "output": "opacity: 0;",
      "responsive": false,
      "hover": true
    },
    {
      "class": "o5",
      "output": "opacity: 0.05;",
      "responsive": false,
      "hover": true
    },
    {
      "class": "o10",
      "output": "opacity: 0.1;",
      "responsive": false
    },
    {
      "class": "o20",
      "output": "opacity: 0.2;",
      "responsive": false
    },
    {
      "class": "o30",
      "output": "opacity: 0.3;",
      "responsive": false
    },
    {
      "class": "o40",
      "output": "opacity: 0.4;",
      "responsive": false
    },
    {
      "class": "o50",
      "output": "opacity: 0.5;",
      "responsive": false,
      "hover": true
    },
    {
      "class": "o60",
      "output": "opacity: 0.6;",
      "responsive": false
    },
    {
      "class": "o70",
      "output": "opacity: 0.7;",
      "responsive": false
    },
    {
      "class": "o80",
      "output": "opacity: 0.8;",
      "responsive": false,
      "hover": true
    },
    {
      "class": "o90",
      "output": "opacity: 0.9;",
      "responsive": false
    },
    {
      "class": "o100",
      "output": "opacity: 1;",
      "responsive": false,
      "hover": true,
      "focus": true
    }
  ],
  "overflow": [
    {
      "class": "overflow-auto",
      "output": "overflow: auto;",
      "define": "<p class='mb0'>If content fits inside the content box, it looks the same as visible, but still establishes a new block-formatting context. Desktop browsers like Firefox provide scrollbars if content overflows.</p>",
      "responsive": false
    },
    {
      "class": "overflow-x-auto",
      "output": "overflow-x: auto;",
      "define": "<p class='mb0'>If content fits inside the content box, it looks the same as visible in the x dimension, but still establishes a new block-formatting context. Desktop browsers like Firefox provide scrollbars if content overflows.</p>",
      "responsive": false
    },
    {
      "class": "overflow-y-auto",
      "output": "overflow-y: auto;",
      "define": "<p class='mb0'>If content fits inside the content box, it looks the same as visible in the y dimension, but still establishes a new block-formatting context. Desktop browsers like Firefox provide scrollbars if content overflows.</p>",
      "responsive": false
    },
    {
      "class": "overflow-hidden",
      "output": "overflow: hidden;",
      "define": "<p class='mb0'>Content is clipped if necessary to fit the content box. No scrollbars are provided.</p>",
      "responsive": false
    },
    {
      "class": "overflow-x-hidden",
      "output": "overflow-x: hidden;",
      "define": "<p class='mb0'>Content is clipped if necessary to fit the content box. No scrollbars are provided in the x dimension.</p>",
      "responsive": false
    },
    {
      "class": "overflow-y-hidden",
      "output": "overflow-y: hidden;",
      "define": "<p class='mb0'>Content is clipped if necessary to fit the content box. No scrollbars are provided in the y dimension.</p>",
      "responsive": false
    },
    {
      "class": "overflow-scroll",
      "output": "overflow: scroll;",
      "define": "<p class='mb0'>Content is clipped if necessary to fit the content box. Browsers display scrollbars whether or not any content is actually clipped. (This prevents scrollbars from appearing or disappearing when the content changes.) Printers may still print overflowing content.</p>",
      "responsive": false
    },
    {
      "class": "overflow-x-scroll",
      "output": "overflow-x: scroll;",
      "define": "<p class='mb0'>Content is clipped if necessary to fit the content box. Browsers display scrollbars whether or not any content is actually clipped in the x dimension.</p>",
      "responsive": false
    },
    {
      "class": "overflow-y-scroll",
      "output": "overflow-y: scroll;",
      "define": "<p class='mb0'>Content is clipped if necessary to fit the content box. Browsers display scrollbars whether or not any content is actually clipped in the y dimension.</p>",
      "responsive": false
    },
    {
      "class": "overflow-visible",
      "output": "overflow: visible;",
      "define": "<p class='mb0'>Content is not clipped and may be rendered outside the content box. This is the default value.</p>",
      "responsive": false
    }
  ],
  "outline": [
    {
      "class": "outline-none",
      "output": "outline: 0;",
      "define": "<p class='mb0'>Removes the browser’s default focus style. To maintain accessibility, care should be taken to replace the style that’s been removed.</p>",
      "focus": false
    },
    {
      "class": "outline-ring",
      "output": "outline: solid @su4 var(--focus-ring);",
      "define": "<p class='mb0'>Adds an outline that mimics our button focus styling.</p>",
      "focus": true
    }
  ],
  "position": [
    {
      "class": "ps-absolute",
      "output": "position: absolute;",
      "define": "<p class='mb0'>Absolutely positions an element. Typically is used in conjunction with <code class='stacks-code'>top</code>, <code class='stacks-code'>right</code>, <code class='stacks-code'>bottom</code>, and <code class='stacks-code'>left</code> properties.</p><p><em>Note: Absolutely positioning an element takes it out of the DOM flow and puts it automatically above all relatively positioned items which don't have a <code class='stacks-code'>z-index</code> assigned.</em></p>",
      "responsive": true
    },
    {
      "class": "ps-fixed",
      "output": "position: fixed;",
      "define": "<p class='mb0'>Fixes an element within the viewport. Typically is used in conjunction with <code class='stacks-code'>top</code>, <code class='stacks-code'>right</code>, <code class='stacks-code'>bottom</code>, and <code class='stacks-code'>left</code> properties.</p><p><em>Note: Fixing an element's position, like absolute positioning, takes it out of the DOM flow and puts it automatically above all relatively positioned items.</em></p>",
      "responsive": true
    },
    {
      "class": "ps-relative",
      "output": "position: relative;",
      "define": "<p class='mb0'>Relatively positions an element in relation to elements around it. The <code class='stacks-code'>top</code> and <code class='stacks-code'>bottom</code> properties specify the vertical offset from its normal position. In the same way the <code class='stacks-code'>left</code> and <code class='stacks-code'>right</code> properties specify the horizontal offset.</p>",
      "responsive": true
    },
    {
      "class": "ps-static",
      "output": "position: static;",
      "define": "<p class='mb0'>An element is positioned according to the document's flow. The <code class='stacks-code'>top</code>, <code class='stacks-code'>right</code>, <code class='stacks-code'>bottom</code>, <code class='stacks-code'>left</code>, and <code class='stacks-code'>z-index</code> properties have <em>no effect</em>.</p><p><strong>This is the default value.</strong></p>",
      "responsive": true
    },
    {
      "class": "ps-sticky",
      "output": "position: sticky;",
      "define": "<p class='mb0'>An element is positioned according to the document's flow, and then offset relative to its flow root and containing block. This creates a new stacking context.</p><p class='mb0'><strong class='mb4'>Notes:</strong><br/>Sticky elements, by design, will not work inside an element with <code class='stacks-code'>overflow:hidden;</code> or <code class='stacks-code'>overflow:auto;</code> values.</p>",
      "responsive": true
    }
  ],
  "vertical-alignment": [
    {
      "class": "va-baseline",
      "output": "vertical-align: baseline;",
      "responsive": false
    },
    {
      "class": "va-bottom",
      "output": "vertical-align: bottom;",
      "responsive": false
    },
    {
      "class": "va-middle",
      "output": "vertical-align: middle;",
      "responsive": false
    },
    {
      "class": "va-sub",
      "output": "vertical-align: sub;",
      "responsive": false
    },
    {
      "class": "va-super",
      "output": "vertical-align: super;",
      "responsive": false
    },
    {
      "class": "va-text-bottom",
      "output": "vertical-align: text-bottom;",
      "responsive": false
    },
    {
      "class": "va-text-top",
      "output": "vertical-align: text-top;",
      "responsive": false
    },
    {
      "class": "va-top",
      "output": "vertical-align: top;",
      "responsive": false
    },
    {
      "class": "va-unset",
      "output": "vertical-align: unset;",
      "responsive": false
    }
  ],
  "z-index": [
    {
      "class": "z-hide",
      "output": "z-index: -1;",
      "responsive": false
    },
    {
      "class": "z-base",
      "output": "z-index: 0;",
      "responsive": false
    },
    {
      "class": "z-selected",
      "output": "z-index: 25;",
      "responsive": false
    },
    {
      "class": "z-active",
      "output": "z-index: 50;",
      "responsive": false
    },
    {
      "class": "z-dropdown",
      "output": "z-index: 1000;",
      "responsive": false
    },
    {
      "class": "z-popover",
      "output": "z-index: 2000;",
      "responsive": false
    },
    {
      "class": "z-tooltip",
      "output": "z-index: 3000;",
      "responsive": false
    },
    {
      "class": "z-banner",
      "output": "z-index: 4000;",
      "responsive": false
    },
    {
      "class": "z-nav",
      "output": "z-index: 5000;",
      "responsive": false
    },
    {
      "class": "z-nav-fixed",
      "output": "z-index: 5050;",
      "responsive": false
    },
    {
      "class": "z-modal-bg",
      "output": "z-index: 8050;",
      "responsive": false
    },
    {
      "class": "z-modal",
      "output": "z-index: 9000;",
      "responsive": false
    }
  ],
  "current-color": [
    {
      "class": "fill-current",
      "output": "fill: currentColor;",
      "responsive": false
    },
    {
      "class": "stroke-current",
      "output": "stroke: currentColor;",
      "responsive": false
    }
  ],
  "lists": [
    {
      "class": "list-reset",
      "output": "list-style: none; margin: 0; padding: 0;"
    },
    {
      "class": "list-ls-none",
      "output": "list-style: none;"
    },
    {
      "class": "list-ls-disc",
      "output": "list-style-type: disc;"
    },
    {
      "class": "list-ls-decimal",
      "output": "list-style-type: decimal;"
    },
    {
      "class": "list-ls-unset",
      "output": "list-style-type: inherit;"
    },
    {
      "class": "list-inside",
      "output": "list-style-position: inside;"
    },
    {
      "class": "list-outside",
      "output": "list-style-position: outside;"
    }
  ],
  "transitions": [
    {
      "class": "t",
      "output": "transition-duration: .1s; transition-property: all; transition-timing-function: ease-in; transition-delay: 0s;",
      "define": "<p class='mb0'>Apply a default transition style to an element.</p>",
      "responsive": false
    },
    {
      "class": "t-slow",
      "output": "transition-duration: .25s;",
      "define": "<p class='mb0'>Slow down the default transition to 0.25s.</p>",
      "responsive": false
    },
    {
      "class": "t-fast",
      "output": "transition-duration: .05s;",
      "define": "<p class='mb0'>Speed up the default transition to 0.05s.</p>",
      "responsive": false
    },
    {
      "class": "t-unset",
      "output": "transition-property: none;",
      "define": "<p class='mb0'>Remove transition properties from an element.</p>",
      "responsive": false
    },
    {
      "class": "t-bg",
      "output": "transition-property: background-color;",
      "define": "<p class='mb0'>Transition the background property of an element.</p>",
      "responsive": false
    },
    {
      "class": "t-opacity",
      "output": "transition-property: opacity;",
      "define": "<p class='mb0'>Transition the opacity property of an element.</p>",
      "responsive": false
    },
    {
      "class": "t-shadow",
      "output": "transition-property: box-shadow;",
      "define": "<p class='mb0'>Transition the box shadow property of an element.</p>",
      "responsive": false
    },
    {
      "class": "t-delay",
      "output": "transition-delay: .25s;",
      "define": "<p class='mb0'>Apply a transition delay to an element.</p>",
      "responsive": false
    },
    {
      "class": "t-delay-unset",
      "output": "transition-delay: 0s;",
      "define": "<p class='mb0'>Remove a transition delay from an element.</p>",
      "responsive": false
    }
  ]
}