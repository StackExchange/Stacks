{
  "flex-item": [
    {
      "class": ".flex--item1",
      "all": ".flex__allcells1",
      "output": "flex-basis: 8.333333333%;"
    },
    {
      "class": ".flex--item2",
      "all": ".flex__allcells2",
      "output": "flex-basis: 16.666666667%;"
    },
    {
      "class": ".flex--item3",
      "all": ".flex__allcells3",
      "output": "flex-basis: 24.999999999%;"
    },
    {
      "class": ".flex--item4",
      "all": ".flex__allcells4",
      "output": "flex-basis: 33.333333332%;"
    },
    {
      "class": ".flex--item5",
      "all": ".flex__allcells5",
      "output": "flex-basis: 41.666666665%;"
    },
    {
      "class": ".flex--item6",
      "all": ".flex__allcells6",
      "output": "flex-basis: 50%;"
    },
    {
      "class": ".flex--item7",
      "all": ".flex__allcells7",
      "output": "flex-basis: 58.333333331%;"
    },
    {
      "class": ".flex--item8",
      "all": ".flex__allcells8",
      "output": "flex-basis: 66.666666664%;"
    },
    {
      "class": ".flex--item9",
      "all": ".flex__allcells9",
      "output": "flex-basis: 74.999999997%;"
    },
    {
      "class": ".flex--item10",
      "all": ".flex__allcells10",
      "output": "flex-basis: 83.33333333%;"
    },
    {
      "class": ".flex--item11",
      "all": ".flex__allcells11",
      "output": "flex-basis: 91.666666663%;"
    },
    {
      "class": ".flex--item12",
      "all": ".flex__allcells12",
      "output": "flex-basis: 100%;"
    }
  ],
  "gutter": [
    {
      "class": ".gs2",
      "output": "2px"
    },
    {
      "class": ".gs4",
      "output": "4px"
    },
    {
      "class": ".gs6",
      "output": "6px"
    },
    {
      "class": ".gs8",
      "output": "8px"
    },
    {
      "class": ".gs12",
      "output": "12px"
    },
    {
      "class": ".gs16",
      "output": "16px"
    },
    {
      "class": ".gs24",
      "output": "24px"
    },
    {
      "class": ".gs32",
      "output": "32px"
    },
    {
      "class": ".gs48",
      "output": "48px"
    },
    {
      "class": ".gs64",
      "output": "64px"
    },
    {
      "class": ".gsx",
      "output": "Applies margins only to left and right"
    },
    {
      "class": ".gsy",
      "output": "Applies margins only to top and bottom"
    }
  ],
  "justification": [
    {
      "class": ".jc-center",
      "define": "Centers child elements along the parent’s main axis.",
      "responsive": true
    },
    {
      "class": ".jc-end",
      "define": "Aligns child elements at the end of the parent’s main axis.",
      "responsive": true
    },
    {
      "class": ".jc-space-around",
      "define": "Equally distributes the remaining space around child elements. Note that this doesn’t mean the spaces are visually equal, but that the same space unit is applied to both sides of a child element. The first item would have one unit of space against the container edge, but the next item would have two units of space between itself and the first item.",
      "responsive": true
    },
    {
      "class": ".jc-space-between",
      "define": "Evenly distributes the space between child elements along a parent’s main axis with the first item starting on the start line and the last item on the end line.",
      "responsive": true
    },
    {
      "class": ".jc-space-evenly",
      "define": "The spacing between any two items (and spacing between the edges) are equal.",
      "responsive": true
    },
    {
      "class": ".jc-start",
      "define": "Aligns child elements at the start of the parent’s main axis.",
      "responsive": true
    }
  ],
  "align-items": [
    {
      "class": ".ai-baseline",
      "define": "Aligns child elements along the baseline of a parent’s cross axis.",
      "responsive": true
    },
    {
      "class": ".ai-center",
      "define": "Centers child elements along the parent’s cross axis.",
      "responsive": true
    },
    {
      "class": ".ai-end",
      "define": "Places child elements at the end of the parent’s cross axis.",
      "responsive": true
    },
    {
      "class": ".ai-start",
      "define": "Places child elements at the start of the parent’s cross axis.",
      "responsive": true
    },
    {
      "class": ".ai-stretch",
      "define": "Stretches child elements along the parent’s cross axis.",
      "responsive": true
    }
  ],
  "flex-direction": [
    {
      "class": ".fd-row",
      "define": "Sets the flex direction to a row.",
      "responsive": true
    },
    {
      "class": ".fd-row-reverse",
      "define": "Reverses the row flex direction.",
      "responsive": true
    },
    {
      "class": ".fd-column",
      "define": "Sets the flex direction to a column.",
      "responsive": true
    },
    {
      "class": ".fd-column-reverse",
      "define": "Reverses the column flex direction.",
      "responsive": true
    }
  ],
  "align-content": [
    {
      "class": ".ac-center",
      "define": "Distributes child elements starting from the center along a parent’s cross axis. This only works with more than one line.",
      "responsive": false
    },
    {
      "class": ".ac-end",
      "define": "Distributes child elements starting from the end along a parent’s cross axis. This only works with more than one line.",
      "responsive": false
    },
    {
      "class": ".ac-space-around",
      "define": "Distributes child elements with space around along a parent’s cross axis. This only works with more than one line.",
      "responsive": false
    },
    {
      "class": ".ac-space-between",
      "define": "Distributes child elements with space between along a parent’s cross axis. This only works with more than one line.",
      "responsive": false
    },
    {
      "class": ".ac-start",
      "define": "Distributes child elements starting from the start along a parent’s cross axis. This only works with more than one line.",
      "responsive": false
    },
    {
      "class": ".ac-stretch",
      "define": "Distributes child elements stretching them along a parent’s cross axis. This only works with more than one line.",
      "responsive": false
    }
  ],
  "align-self": [
    {
      "class": ".as-auto",
      "define": "Auto re-aligns a child element along the parent’s main axis based on the ai-[x] value.",
      "responsive": true
    },
    {
      "class": ".as-baseline",
      "define": "Re-aligns a child element along the baseline of the parent’s main axis.",
      "responsive": true
    },
    {
      "class": ".as-center",
      "define": "Centers a child element along the parent’s main axis.",
      "responsive": true
    },
    {
      "class": ".as-end",
      "define": "Re-aligns a child element to the end of the parent’s main axis.",
      "responsive": true
    },
    {
      "class": ".as-start",
      "define": "Re-aligns a child element to the start of the parent’s main axis.",
      "responsive": true
    },
    {
      "class": ".as-stretch",
      "define": "Stretches a child element along the parent’s main axis.",
      "responsive": true
    }
  ],
  "flex-wrap": [
    {
      "class": ".fw-wrap",
      "define": "Wraps the child cells within a parent.",
      "responsive": true
    },
    {
      "class": ".fw-reverse",
      "define": "Reverses the wrap direction.",
      "responsive": true
    },
    {
      "class": ".fw-nowrap",
      "define": "Removes the wrap direction.",
      "responsive": true
    }
  ],
  "order": [
    {
      "class": ".order-first",
      "define": "Places the child element first within a parent container.",
      "responsive": true
    },
    {
      "class": ".order-last",
      "define": "Places the child element last within a parent container.",
      "responsive": true
    }
  ],
  "flex": [
    {
      "class": ".fl-grow1",
      "define": "Sets flex-grow to allow a flex item to grow to fill any available space.",
      "responsive": true
    },
    {
      "class": ".fl-grow0",
      "define": "Prevents a flex item from growing.",
      "responsive": true
    },
    {
      "class": ".fl-shrink1",
      "define": "Allows a flex item to shrink if needed.",
      "responsive": true
    },
    {
      "class": ".fl-shrink0",
      "define": "Prevents a flex item from shrinking.",
      "responsive": true
    },
    {
      "class": ".fl-none",
      "define": "Prevents a flex item from growing or shrinking.",
      "responsive": true
    },
    {
      "class": ".fl-initial",
      "define": "Allows a flex item to shrink but not grow, taking into account its initial size.",
      "responsive": true
    },
    {
      "class": ".fl-auto",
      "define": "Allows a flex item to grow and shrink, taking into account its initial size.",
      "responsive": true
    },
    {
      "class": ".fl-equal",
      "define": "Allow a flex item to grow and shrink as needed, ignoring its initial size. If all children within a flex layout have .<code class='stacks-code'>.fl-equal</code> enabled, they’ll be the same size. See also <code class='stacks-code'>.flex__fl-equal</code>",
      "responsive": true
    }
  ],
  "helpers": [
    {
      "class": ".flex__center",
      "define": "Centers child elements along a parent’s main and cross axis.",
      "responsive": false
    },
    {
      "class": ".flex__fl-shrink0",
      "define": "Disables shrinking from all child elements",
      "responsive": false
    },
    {
      "class": ".flex__fl-equal",
      "define": "Makes each child element grow equally",
      "responsive": false
    }
  ]
}