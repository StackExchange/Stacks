{
  "containers": [
    {
      "class": "d-grid",
      "output": "display: grid;",
      "define": "This turns any element into a block-level element."
    }
  ],
  "column-templates": [
    {
      "class": "grid__1",
      "output": "grid-template-columns: repeat(1, minmax(0, 1fr))",
      "define": "Creates a grid layout with 1 column",
      "responsive": true
    },
    {
      "class": "grid__2",
      "output": "grid-template-columns: repeat(2, minmax(0, 2fr))",
      "define": "Creates a grid layout with 2 columns",
      "responsive": true
    },
    {
      "class": "grid__3",
      "output": "grid-template-columns: repeat(3, minmax(0, 3fr))",
      "define": "Creates a grid layout with 3 columns",
      "responsive": true
    },
    {
      "class": "grid__4",
      "output": "grid-template-columns: repeat(4, minmax(0, 4fr))",
      "define": "Creates a grid layout with 4 columns",
      "responsive": true
    },
    {
      "class": "grid__5",
      "output": "grid-template-columns: repeat(5, minmax(0, 5fr))",
      "define": "Creates a grid layout with 5 columns",
      "responsive": true
    },
    {
      "class": "grid__6",
      "output": "grid-template-columns: repeat(6, minmax(0, 6fr))",
      "define": "Creates a grid layout with 6 columns",
      "responsive": true
    },
    {
      "class": "grid__7",
      "output": "grid-template-columns: repeat(7, minmax(0, 7fr))",
      "define": "Creates a grid layout with 7 columns",
      "responsive": true
    },
    {
      "class": "grid__8",
      "output": "grid-template-columns: repeat(8, minmax(0, 8fr))",
      "define": "Creates a grid layout with 8 columns",
      "responsive": true
    },
    {
      "class": "grid__9",
      "output": "grid-template-columns: repeat(9, minmax(0, 9fr))",
      "define": "Creates a grid layout with 9 columns",
      "responsive": true
    },
    {
      "class": "grid__10",
      "output": "grid-template-columns: repeat(10, minmax(0, 10fr))",
      "define": "Creates a grid layout with 10 columns",
      "responsive": true
    },
    {
      "class": "grid__11",
      "output": "grid-template-columns: repeat(11, minmax(0, 11fr))",
      "define": "Creates a grid layout with 11 columns",
      "responsive": true
    },
    {
      "class": "grid__12",
      "output": "grid-template-columns: repeat(1, minmax(0, 12fr))",
      "define": "Creates a grid layout with 12 columns",
      "responsive": true
    }
  ],
  "columns": [
    {
      "class": "grid--col-all",
      "output": "grid-column: 1 / -1",
      "define": "Span all the columns",
      "responsive": true
    },
    {
      "class": "grid--col1",
      "output": "grid-column: span 1",
      "define": "Span 1 column",
      "responsive": true
    },
    {
      "class": "grid--col2",
      "output": "grid-column: span 2",
      "define": "Span 2 columns",
      "responsive": true
    },
    {
      "class": "grid--col3",
      "output": "grid-column: span 3",
      "define": "Span 3 columns",
      "responsive": true
    },
    {
      "class": "grid--col4",
      "output": "grid-column: span 4",
      "define": "Span 4 columns",
      "responsive": true
    },
    {
      "class": "grid--col5",
      "output": "grid-column: span 5",
      "define": "Span 5 columns",
      "responsive": true
    },
    {
      "class": "grid--col6",
      "output": "grid-column: span 6",
      "define": "Span 6 columns",
      "responsive": true
    },
    {
      "class": "grid--col7",
      "output": "grid-column: span 7",
      "define": "Span 7 columns",
      "responsive": true
    },
    {
      "class": "grid--col8",
      "output": "grid-column: span 8",
      "define": "Span 8 columns",
      "responsive": true
    },
    {
      "class": "grid--col9",
      "output": "grid-column: span 9",
      "define": "Span 9 columns",
      "responsive": true
    },
    {
      "class": "grid--col10",
      "output": "grid-column: span 10",
      "define": "Span 10 columns",
      "responsive": true
    },
    {
      "class": "grid--col11",
      "output": "grid-column: span 11",
      "define": "Span 11 columns",
      "responsive": true
    },
    {
      "class": "grid--col12",
      "output": "grid-column: span 12",
      "define": "Span 12 columns",
      "responsive": true
    }
  ],
  "rows": [
    {
      "class": "grid--row-all",
      "output": "grid-row: 1 / -1",
      "define": "Span all the rows",
      "responsive": true
    },
    {
      "class": "grid--row1",
      "output": "grid-row: span 1",
      "define": "Span 1 row",
      "responsive": true
    },
    {
      "class": "grid--row2",
      "output": "grid-row: span 2",
      "define": "Span 2 rows",
      "responsive": true
    },
    {
      "class": "grid--row3",
      "output": "grid-row: span 3",
      "define": "Span 3 rows",
      "responsive": true
    },
    {
      "class": "grid--row4",
      "output": "grid-row: span 4",
      "define": "Span 4 rows",
      "responsive": true
    },
    {
      "class": "grid--row5",
      "output": "grid-row: span 5",
      "define": "Span 5 rows",
      "responsive": true
    },
    {
      "class": "grid--row6",
      "output": "grid-row: span 6",
      "define": "Span 6 rows",
      "responsive": true
    },
    {
      "class": "grid--row7",
      "output": "grid-row: span 7",
      "define": "Span 7 rows",
      "responsive": true
    },
    {
      "class": "grid--row8",
      "output": "grid-row: span 8",
      "define": "Span 8 rows",
      "responsive": true
    },
    {
      "class": "grid--row9",
      "output": "grid-row: span 9",
      "define": "Span 9 rows",
      "responsive": true
    },
    {
      "class": "grid--row10",
      "output": "grid-row: span 10",
      "define": "Span 10 rows",
      "responsive": true
    },
    {
      "class": "grid--row11",
      "output": "grid-row: span 11",
      "define": "Span 11 rows",
      "responsive": true
    },
    {
      "class": "grid--row12",
      "output": "grid-row: span 12",
      "define": "Span 12 rows",
      "responsive": true
    }
  ],
  "spacing": [
    {
      "class": "g0",
      "output": "gap: 0",
      "define": "Add no space between grid items",
      "responsive": true
    },
    {
      "class": "g1",
      "output": "gap: 1px",
      "define": "Space out grid items by 1px",
      "responsive": true
    },
    {
      "class": "g2",
      "output": "gap: 2px",
      "define": "Space out grid items by 2px",
      "responsive": true
    },
    {
      "class": "g4",
      "output": "gap: 4px",
      "define": "Space out grid items by 4px",
      "responsive": true
    },
    {
      "class": "g6",
      "output": "gap: 6px",
      "define": "Space out grid items by 6px",
      "responsive": true
    },
    {
      "class": "g8",
      "output": "gap: 8px",
      "define": "Space out grid items by 8px",
      "responsive": true
    },
    {
      "class": "g12",
      "output": "gap: 12px",
      "define": "Space out grid items by 12px",
      "responsive": true
    },
    {
      "class": "g16",
      "output": "gap: 16px",
      "define": "Space out grid items by 16px",
      "responsive": true
    },
    {
      "class": "g24",
      "output": "gap: 24px",
      "define": "Space out grid items by 24px",
      "responsive": true
    },
    {
      "class": "g32",
      "output": "gap: 32px",
      "define": "Space out grid items by 32px",
      "responsive": true
    },
    {
      "class": "g48",
      "output": "gap: 48px",
      "define": "Space out grid items by 48px",
      "responsive": true
    },
    {
      "class": "g64",
      "output": "gap: 64px",
      "define": "Space out grid items by 64px",
      "responsive": true
    }
  ],
  "autoflow": [
    {
      "class": "g-af-row",
      "output": "grid-auto-flow: row",
      "define": "Items are placed by filling each row in turn, adding new rows as necessary. The default.",
      "responsive": true
    },
    {
      "class": "g-af-column",
      "output": "grid-auto-flow: column",
      "define": "Items are placed by filling each column in turn, adding new columns as necessary.",
      "responsive": true
    },
    {
      "class": "g-af-dense",
      "output": "grid-auto-flow: dense",
      "define": "Dense packing algorithm attempts to fill in holes earlier in the grid, if smaller items come up later. This may cause items to appear out-of-order, when doing so would fill in holes left by larger items.",
      "responsive": true
    }
  ],
  "column-start-end": [
    {
      "class": "grid--col-start1",
      "output": "grid-column-start: 1",
      "define": "Start at the 1st column",
      "responsive": true
    },
    {
      "class": "grid--col-start2",
      "output": "grid-column-start: 2",
      "define": "Start at the 2nd column",
      "responsive": true
    },
    {
      "class": "grid--col-start3",
      "output": "grid-column-start: 3",
      "define": "Start at the 3rd column",
      "responsive": true
    },
    {
      "class": "grid--col-start4",
      "output": "grid-column-start: 4",
      "define": "Start at the 4th column",
      "responsive": true
    },
    {
      "class": "grid--col-start5",
      "output": "grid-column-start: 5",
      "define": "Start at the 5th column",
      "responsive": true
    },
    {
      "class": "grid--col-start6",
      "output": "grid-column-start: 6",
      "define": "Start at the 6th column",
      "responsive": true
    },
    {
      "class": "grid--col-start7",
      "output": "grid-column-start: 7",
      "define": "Start at the 7th column",
      "responsive": true
    },
    {
      "class": "grid--col-start8",
      "output": "grid-column-start: 8",
      "define": "Start at the 8th column",
      "responsive": true
    },
    {
      "class": "grid--col-start9",
      "output": "grid-column-start: 9",
      "define": "Start at the 9th column",
      "responsive": true
    },
    {
      "class": "grid--col-start10",
      "output": "grid-column-start: 10",
      "define": "Start at the 10th column",
      "responsive": true
    },
    {
      "class": "grid--col-start11",
      "output": "grid-column-start: 11",
      "define": "Start at the 11th column",
      "responsive": true
    },
    {
      "class": "grid--col-start12",
      "output": "grid-column-start: 12",
      "define": "Start at the 12th column",
      "responsive": true
    },
    {
      "class": "grid--col-end2",
      "output": "grid-column-end: 2",
      "define": "End at the start of 2nd column",
      "responsive": true
    },
    {
      "class": "grid--col-end3",
      "output": "grid-column-end: 3",
      "define": "End at the start of 3rd column",
      "responsive": true
    },
    {
      "class": "grid--col-end4",
      "output": "grid-column-end: 4",
      "define": "End at the start of 4th column",
      "responsive": true
    },
    {
      "class": "grid--col-end5",
      "output": "grid-column-end: 5",
      "define": "End at the start of 5th column",
      "responsive": true
    },
    {
      "class": "grid--col-end6",
      "output": "grid-column-end: 6",
      "define": "End at the start of 6th column",
      "responsive": true
    },
    {
      "class": "grid--col-end7",
      "output": "grid-column-end: 7",
      "define": "End at the start of 7th column",
      "responsive": true
    },
    {
      "class": "grid--col-end8",
      "output": "grid-column-end: 8",
      "define": "End at the start of 8th column",
      "responsive": true
    },
    {
      "class": "grid--col-end9",
      "output": "grid-column-end: 9",
      "define": "End at the start of 9th column",
      "responsive": true
    },
    {
      "class": "grid--col-end10",
      "output": "grid-column-end: 10",
      "define": "End at the start of 10th column",
      "responsive": true
    },
    {
      "class": "grid--col-end11",
      "output": "grid-column-end: 11",
      "define": "End at the start of 11th column",
      "responsive": true
    },
    {
      "class": "grid--col-end12",
      "output": "grid-column-end: 12",
      "define": "End at the start of 12th column",
      "responsive": true
    },
    {
      "class": "grid--col-end13",
      "output": "grid-column-end: 13",
      "define": "End at the start of 13th column",
      "responsive": true
    }
  ],
  "row-start-end": [
    {
      "class": "grid--row-start1",
      "output": "grid-row-start: 1",
      "define": "Start at the 1st row",
      "responsive": true
    },
    {
      "class": "grid--row-start2",
      "output": "grid-row-start: 2",
      "define": "Start at the 2nd row",
      "responsive": true
    },
    {
      "class": "grid--row-start3",
      "output": "grid-row-start: 3",
      "define": "Start at the 3rd row",
      "responsive": true
    },
    {
      "class": "grid--row-start4",
      "output": "grid-row-start: 4",
      "define": "Start at the 4th row",
      "responsive": true
    },
    {
      "class": "grid--row-start5",
      "output": "grid-row-start: 5",
      "define": "Start at the 5th row",
      "responsive": true
    },
    {
      "class": "grid--row-start6",
      "output": "grid-row-start: 6",
      "define": "Start at the 6th row",
      "responsive": true
    },
    {
      "class": "grid--row-start7",
      "output": "grid-row-start: 7",
      "define": "Start at the 7th row",
      "responsive": true
    },
    {
      "class": "grid--row-start8",
      "output": "grid-row-start: 8",
      "define": "Start at the 8th row",
      "responsive": true
    },
    {
      "class": "grid--row-start9",
      "output": "grid-row-start: 9",
      "define": "Start at the 9th row",
      "responsive": true
    },
    {
      "class": "grid--row-start10",
      "output": "grid-row-start: 10",
      "define": "Start at the 10th row",
      "responsive": true
    },
    {
      "class": "grid--row-start11",
      "output": "grid-row-start: 11",
      "define": "Start at the 11th row",
      "responsive": true
    },
    {
      "class": "grid--row-start12",
      "output": "grid-row-start: 12",
      "define": "Start at the 12th row",
      "responsive": true
    },
    {
      "class": "grid--row-end2",
      "output": "grid-row-end: 2",
      "define": "End at the start of 2nd row",
      "responsive": true
    },
    {
      "class": "grid--row-end3",
      "output": "grid-row-end: 3",
      "define": "End at the start of 3rd row",
      "responsive": true
    },
    {
      "class": "grid--row-end4",
      "output": "grid-row-end: 4",
      "define": "End at the start of 4th row",
      "responsive": true
    },
    {
      "class": "grid--row-end5",
      "output": "grid-row-end: 5",
      "define": "End at the start of 5th row",
      "responsive": true
    },
    {
      "class": "grid--row-end6",
      "output": "grid-row-end: 6",
      "define": "End at the start of 6th row",
      "responsive": true
    },
    {
      "class": "grid--row-end7",
      "output": "grid-row-end: 7",
      "define": "End at the start of 7th row",
      "responsive": true
    },
    {
      "class": "grid--row-end8",
      "output": "grid-row-end: 8",
      "define": "End at the start of 8th row",
      "responsive": true
    },
    {
      "class": "grid--row-end9",
      "output": "grid-row-end: 9",
      "define": "End at the start of 9th row",
      "responsive": true
    },
    {
      "class": "grid--row-end10",
      "output": "grid-row-end: 10",
      "define": "End at the start of 10th row",
      "responsive": true
    },
    {
      "class": "grid--row-end11",
      "output": "grid-row-end: 11",
      "define": "End at the start of 11th row",
      "responsive": true
    },
    {
      "class": "grid--row-end12",
      "output": "grid-row-end: 12",
      "define": "End at the start of 12th row",
      "responsive": true
    },
    {
      "class": "grid--row-end13",
      "output": "grid-row-end: 13",
      "define": "End at the start of 13th row",
      "responsive": true
    }
  ],
  "alignment": [
    {
      "class": "ji-auto",
      "output": "justify-items: auto",
      "define": "Use the parent’s justify value.",
      "responsive": true
    },
    {
      "class": "ji-center",
      "output": "justify-items: center",
      "define": "The items are packed flush to each other toward the center of x axis.",
      "responsive": true
    },
    {
      "class": "ji-start",
      "output": "justify-items: start",
      "define": "The items are packed flush to each other toward the left.",
      "responsive": true
    },
    {
      "class": "ji-end",
      "output": "justify-items: end",
      "define": "The items are packed flush to each other toward the right.",
      "responsive": true
    },
    {
      "class": "ji-stretch",
      "output": "justify-items: stretch",
      "define": "Items stretch to fill the available space",
      "responsive": true
    },
    {
      "class": "ji-unset",
      "output": "justify-items: unset",
      "define": "Removes any justification, effectively resetting the value",
      "responsive": true
    },
    {
      "class": "js-auto",
      "output": "justify-self: auto",
      "define": "Use the parent’s justify value.",
      "responsive": true
    },
    {
      "class": "js-center",
      "output": "justify-self: center",
      "define": "The item is packed flush to the others toward the center of x axis.",
      "responsive": true
    },
    {
      "class": "js-start",
      "output": "justify-self: start",
      "define": "The item is packed flush to the others toward the left.",
      "responsive": true
    },
    {
      "class": "js-end",
      "output": "justify-self: end",
      "define": "The item is packed flush to the others toward the right.",
      "responsive": true
    },
    {
      "class": "js-stretch",
      "output": "justify-self: stretch",
      "define": "Item stretches to fill the available space",
      "responsive": true
    },
    {
      "class": "js-unset",
      "output": "justify-self: unset",
      "define": "Removes any justification, effectively resetting the value",
      "responsive": true
    },
    {
      "class": "ai-baseline",
      "output": "align-items: baseline",
      "define": "Aligns items along the baseline of a parent’s cross axis.",
      "responsive": true
    },
    {
      "class": "ai-center",
      "output": "align-items: center",
      "define": "Centers child elements along the parent’s cross axis.",
      "responsive": true
    },
    {
      "class": "ai-end",
      "output": "align-items: end",
      "define": "Places child elements at the end of the parent’s cross axis.",
      "responsive": true
    },
    {
      "class": "ai-start",
      "output": "align-items: start",
      "define": "Places child elements at the start of the parent’s cross axis.",
      "responsive": true
    },
    {
      "class": "ai-stretch",
      "output": "align-items: stretch",
      "define": "Stretches child elements along the parent’s cross axis.",
      "responsive": true
    },
    {
      "class": "as-auto",
      "output": "align-self: auto;",
      "define": "Auto re-aligns a child element along the parent’s main axis.",
      "responsive": true
    },
    {
      "class": "as-baseline",
      "output": "align-self: baseline;",
      "define": "Re-aligns a child element along the baseline of the parent’s main axis.",
      "responsive": true
    },
    {
      "class": "as-center",
      "output": "align-self: center;",
      "define": "Centers a child element along the parent’s main axis.",
      "responsive": true
    },
    {
      "class": "as-end",
      "output": "align-self: end;",
      "define": "Re-aligns a child element to the end of the parent’s main axis.",
      "responsive": true
    },
    {
      "class": "as-start",
      "output": "align-self: start;",
      "define": "Re-aligns a child element to the start of the parent’s main axis.",
      "responsive": true
    },
    {
      "class": "as-stretch",
      "output": "align-self: stretch;",
      "define": "Stretches a child element along the parent’s main axis.",
      "responsive": true
    }
  ]
}