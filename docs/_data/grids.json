{
  "grid-cell": [
    {
      "class": ".grid--cell1",
      "all": ".grid__allcells1",
      "output": "flex-basis: 8.333333333%;"
    },
    {
      "class": ".grid--cell2",
      "all": ".grid__allcells2",
      "output": "flex-basis: 16.666666667%;"
    },
    {
      "class": ".grid--cell3",
      "all": ".grid__allcells3",
      "output": "flex-basis: 24.999999999%;"
    },
    {
      "class": ".grid--cell4",
      "all": ".grid__allcells4",
      "output": "flex-basis: 33.333333332%;"
    },
    {
      "class": ".grid--cell5",
      "all": ".grid__allcells5",
      "output": "flex-basis: 41.666666665%;"
    },
    {
      "class": ".grid--cell6",
      "all": ".grid__allcells6",
      "output": "flex-basis: 50%;"
    },
    {
      "class": ".grid--cell7",
      "all": ".grid__allcells7",
      "output": "flex-basis: 58.333333331%;"
    },
    {
      "class": ".grid--cell8",
      "all": ".grid__allcells8",
      "output": "flex-basis: 66.666666664%;"
    },
    {
      "class": ".grid--cell9",
      "all": ".grid__allcells9",
      "output": "flex-basis: 74.999999997%;"
    },
    {
      "class": ".grid--cell10",
      "all": ".grid__allcells10",
      "output": "flex-basis: 83.33333333%;"
    },
    {
      "class": ".grid--cell11",
      "all": ".grid__allcells11",
      "output": "flex-basis: 91.666666663%;"
    },
    {
      "class": ".grid--cell12",
      "all": ".grid__allcells12",
      "output": "flex-basis: 100%;"
    }
  ],
  "gutter": [
    {
      "class": ".gs2",
      "output": "2px"
    },
    {
      "class": ".gs4",
      "output": "4px"
    },
    {
      "class": ".gs8",
      "output": "8px"
    },
    {
      "class": ".gs12",
      "output": "12px"
    },
    {
      "class": ".gs16",
      "output": "16px"
    },
    {
      "class": ".gs24",
      "output": "24px"
    },
    {
      "class": ".gs32",
      "output": "32px"
    },
    {
      "class": ".gs48",
      "output": "48px"
    },
    {
      "class": ".gs64",
      "output": "64px"
    },
    {
      "class": ".gsx",
      "output": "Applies margins only to left and right"
    },
    {
      "class": ".gsy",
      "output": "Applies margins only to top and bottom"
    }
  ],
  "atomic": [
    {
      "class": ".ac-center",
      "define": "Distributes child elements starting from the center along a parent’s cross axis. This only works with more than one line.",
      "responsive": false
    },
    {
      "class": ".ac-end",
      "define": "Distributes child elements starting from the end along a parent’s cross axis. This only works with more than one line.",
      "responsive": false
    },
    {
      "class": ".ac-space-around",
      "define": "Distributes child elements with space around along a parent’s cross axis. This only works with more than one line.",
      "responsive": false
    },
    {
      "class": ".ac-space-between",
      "define": "Distributes child elements with space between along a parent’s cross axis. This only works with more than one line.",
      "responsive": false
    },
    {
      "class": ".ac-start",
      "define": "Distributes child elements starting from the start along a parent’s cross axis. This only works with more than one line.",
      "responsive": false
    },
    {
      "class": ".ac-stretch",
      "define": "Distributes child elements stretching them along a parent’s cross axis. This only works with more than one line.",
      "responsive": false
    },
    {
      "class": ".ai-baseline",
      "define": "Aligns child elements along the baseline of a parent’s cross axis.",
      "responsive": true
    },
    {
      "class": ".ai-center",
      "define": "Centers child elements along the parent’s cross axis.",
      "responsive": true
    },
    {
      "class": ".ai-end",
      "define": "Places child elements at the end of the parent’s cross axis.",
      "responsive": true
    },
    {
      "class": ".ai-start",
      "define": "Places child elements at the start of the parent’s cross axis.",
      "responsive": true
    },
    {
      "class": ".ai-stretch",
      "define": "Stretches child elements along the parent’s cross axis.",
      "responsive": true
    },
    {
      "class": ".as-auto",
      "define": "Auto re-aligns a child element along the parent’s main axis.",
      "responsive": true
    },
    {
      "class": ".as-baseline",
      "define": "Re-aligns a child element along the baseline of the parent’s main axis.",
      "responsive": true
    },
    {
      "class": ".as-center",
      "define": "Centers a child element along the parent’s main axis.",
      "responsive": true
    },
    {
      "class": ".as-end",
      "define": "Re-aligns a child element to the end of the parent’s main axis.",
      "responsive": true
    },
    {
      "class": ".as-start",
      "define": "Re-aligns a child element to the start of the parent’s main axis.",
      "responsive": true
    },
    {
      "class": ".as-stretch",
      "define": "Stretches a child element along the parent’s main axis.",
      "responsive": true
    },
    {
      "class": ".fd-row",
      "define": "Sets the flex direction to a row.",
      "responsive": true
    },
    {
      "class": ".fd-row-reverse",
      "define": "Reverses the row flex direction.",
      "responsive": true
    },
    {
      "class": ".fd-column",
      "define": "Sets the flex direction to a column.",
      "responsive": true
    },
    {
      "class": ".fd-column-reverse",
      "define": "Reverses the column flex direction.",
      "responsive": true
    },
    {
      "class": ".ff-row-wrap",
      "define": "Shortand property to set flex direction and wrap to row wrap.",
      "responsive": false
    },
    {
      "class": ".ff-row-nowrap",
      "define": "Shortand property to set flex direction and wrap to row nowrap.",
      "responsive": false
    },
    {
      "class": ".ff-row-reverse-wrap",
      "define": "Shortand property to set flex direction and wrap to row-reverse wrap.",
      "responsive": false
    },
    {
      "class": ".ff-row-reverse-nowrap",
      "define": "Shortand property to set flex direction and wrap to row-reverse nowrap.",
      "responsive": false
    },
    {
      "class": ".ff-column-wrap",
      "define": "Shortand property to set flex direction and wrap to column wrap.",
      "responsive": false
    },
    {
      "class": ".ff-column-nowrap",
      "define": "Shortand property to set flex direction and wrap to column nowrap.",
      "responsive": false
    },
    {
      "class": ".ff-column-reverse-wrap",
      "define": "Shortand property to set flex direction and wrap to column-reverse wrap.",
      "responsive": false
    },
    {
      "class": ".ff-column-reverse-nowrap",
      "define": "Shortand property to set flex direction and wrap to column-reverse nowrap.",
      "responsive": false
    },
    {
      "class": ".fl0",
      "define": "Sets flex grow and shrink to 0, flex-basis to auto.",
      "responsive": false
    },
    {
      "class": ".fl1",
      "define": "Sets flex grow and shrink to 1, flex-basis to auto.",
      "responsive": false
    },
    {
      "class": ".fl2",
      "define": "Sets flex grow and shrink to 2, flex-basis to auto.",
      "responsive": false
    },
    {
      "class": ".fl3",
      "define": "Sets flex grow and shrink to 3, flex-basis to auto.",
      "responsive": false
    },
    {
      "class": ".fl4",
      "define": "Sets flex grow and shrink to 4, flex-basis to auto.",
      "responsive": false
    },
    {
      "class": ".fl5",
      "define": "Sets flex grow and shrink to 5, flex-basis to auto.",
      "responsive": false
    },
    {
      "class": ".fl-shrink0",
      "define": "Sets flex shrink value to 0, which means it won’t shrink relative to available space and sibling elements.",
      "responsive": false
    },
    {
      "class": ".fl-shrink1",
      "define": "Sets flex shrink value to 1. This means it will shrink relative to other sibling elements by a factor of 1.",
      "responsive": false
    },
    {
      "class": ".fl-shrink2",
      "define": "Sets flex shrink value to 2. This means it will shrink relative to other sibling elements by a factor of 2.",
      "responsive": false
    },
    {
      "class": ".fl-shrink3",
      "define": "Sets flex shrink value to 3. This means it will shrink relative to other sibling elements by a factor of 3.",
      "responsive": false
    },
    {
      "class": ".fl-shrink4",
      "define": "Sets flex shrink value to 4. This means it will shrink relative to other sibling elements by a factor of 4.",
      "responsive": false
    },
    {
      "class": ".fl-shrink5",
      "define": "Sets flex shrink value to 5. This means it will shrink relative to other sibling elements by a factor of 5.",
      "responsive": false
    },
    {
      "class": ".fl-grow0",
      "define": "Sets flex grow value to 0, which means it won’t grow relative to available space and sibling elements.",
      "responsive": false
    },
    {
      "class": ".fl-grow1",
      "define": "Sets flex grow value to 1. This means it will grow relative to other sibling elements by a factor of 1.",
      "responsive": false
    },
    {
      "class": ".fl-grow2",
      "define": "Sets flex grow value to 2. This means it will grow relative to other sibling elements by a factor of 2.",
      "responsive": false
    },
    {
      "class": ".fl-grow3",
      "define": "Sets flex grow value to 3. This means it will grow relative to other sibling elements by a factor of 3.",
      "responsive": false
    },
    {
      "class": ".fl-grow4",
      "define": "Sets flex grow value to 4. This means it will grow relative to other sibling elements by a factor of 4.",
      "responsive": false
    },
    {
      "class": ".fl-grow5",
      "define": "Sets flex grow value to 5. This means it will grow relative to other sibling elements by a factor of 5.",
      "responsive": false
    },
    {
      "class": ".fl-equal",
      "define": "Sets flex grow value to 1, flex shrink to 1, and flex basis to 0, allowing for equal spacing of each child.",
      "responsive": false
    },
    {
      "class": ".fw-wrap",
      "define": "Wraps the child cells within a parent.",
      "responsive": true
    },
    {
      "class": ".fw-reverse",
      "define": "Reverses the wrap direction.",
      "responsive": true
    },
    {
      "class": ".fw-nowrap",
      "define": "Removes the wrap direction.",
      "responsive": true
    },
    {
      "class": ".jc-center",
      "define": "Centers child elements along the parent’s main axis.",
      "responsive": true
    },
    {
      "class": ".jc-end",
      "define": "Aligns child elements at the end of the parent’s main axis.",
      "responsive": true
    },
    {
      "class": ".jc-space-around",
      "define": "Equally distributes the remaining space around child elements. Note that this doesn’t mean the spaces are visually equal, but that the same space unit is applied to both sides of a child element. The first item would have one unit of space against the container edge, but the next item would have two units of space between itself and the first item.",
      "responsive": true
    },
    {
      "class": ".jc-space-between",
      "define": "Evenly distributes the space between child elements along a parent’s main axis with the first item starting on the start line and the last item on the end line.",
      "responsive": true
    },
    {
      "class": ".jc-space-evenly",
      "define": "The spacing between any two items (and spacing between the edges) are equal.",
      "responsive": true
    },
    {
      "class": ".jc-start",
      "define": "Aligns child elements at the start of the parent’s main axis.",
      "responsive": true
    },
    {
      "class": ".grid__center",
      "define": "Centers child elements along a parent’s main and cross axis.",
      "responsive": false
    },
    {
      "class": ".order-first",
      "define": "Places the child element first within a parent container.",
      "responsive": true
    },
    {
      "class": ".order-last",
      "define": "Places the child element last within a parent container.",
      "responsive": true
    }
  ]
}