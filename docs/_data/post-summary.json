{
  "classes": [
    {
      "class": ".s-post-summary",
      "applies": "N/A",
      "description": "Base parent container for a post summary"
    },
    {
      "class": ".s-post-summary--stats",
      "applies": ".s-post-summary",
      "description": "Container for the post summary stats"
    },
    {
      "class": ".s-post-summary--stats-item",
      "applies": ".s-post-summary--stats",
      "description": "Individual stat item within the stats container"
    },
    {
      "class": ".s-post-summary--stats-item-number",
      "applies": ".s-post-summary--stats-item",
      "description": "Container for applying styling to the number of a stat item"
    },
    {
      "class": ".s-post-summary--stats-item-unit",
      "applies": ".s-post-summary--stats-item",
      "description": "Container for applying styling to the unit of a stat item"
    },
    {
      "class": ".has-answers",
      "applies": ".s-post-summary--stats-item",
      "description": "Adds the styling necessary for a question with answers"
    },
    {
      "class": ".has-accepted-answer",
      "applies": ".s-post-summary--stats-item",
      "description": "Adds the styling necessary for a question with accepted answers"
    },
    {
      "class": ".has-bounty",
      "applies": ".s-post-summary--stats-item",
      "description": "Styles the stats item appropriately to display a bounty"
    },
    {
      "class": ".is-warm",
      "applies": ".s-post-summary--stats-item",
      "description": "Styles post stats with a warm color"
    },
    {
      "class": ".is-hot",
      "applies": ".s-post-summary--stats-item",
      "description": "Warmer still, for more popular posts"
    },
    {
      "class": ".is-supernova",
      "applies": ".s-post-summary--stats-item",
      "description": "Paired with a fire icon, these are the most popular stats"
    },
    {
      "class": ".s-post-summary--content",
      "applies": ".s-post-summary",
      "description": "Container for the post summary content"
    },
    {
      "class": ".s-post-summary--content-type",
      "applies": ".s-post-summary--content",
      "description": "A container for various content types, eg. How-to guide on Articles"
    },
    {
      "class": ".s-post-summary--content-title",
      "applies": ".s-post-summary--content",
      "description": "Post title styling"
    },
    {
      "class": ".s-post-summary--content-excerpt",
      "applies": ".s-post-summary--content",
      "description": "An optional content excerpt truncated at 2 lines."
    },
    {
      "class": ".s-post-summary--content-excerpt__sm",
      "applies": ".s-post-summary--content-excerpt",
      "description": "An optional content excerpt truncated at 1 line."
    },
    {
      "class": ".s-post-summary--content-excerpt__md",
      "applies": ".s-post-summary--content-excerpt",
      "description": "An optional content excerpt truncated at 3 lines."
    },
    {
      "class": ".s-post-summary--answer",
      "applies": ".s-post-summary--content",
      "description": "Adds blockquote styling and spacing for answer previews"
    },
    {
      "class": ".s-post-summary--answer-excerpt",
      "applies": ".s-post-summary--content",
      "description": "Provides padding, and truncation to 4 lines."
    },
    {
      "class": ".s-post-summary--content-menu-button",
      "applies": ".s-post-summary--content",
      "description": "An optional button for displaying a post-specific menu."
    },
    {
      "class": ".s-post-summary--meta",
      "applies": ".s-post-summary--content",
      "description": "A container for post meta data, things like tags and user cards."
    },
    {
      "class": ".s-post-summary--meta-tags",
      "applies": ".s-post-summary--meta",
      "description": "A container for tags and other taxonomy."
    }
  ],
  "playground": {
    "layouts": ["", "__minimal"],
    "badges": [
      {
        "label": "Pinned",
        "icon": "TackSm",
        "class": "s-badge__muted s-badge__filled"
      },
      {
        "label": "Deleted",
        "icon": "TrashSm",
        "class": "s-badge__danger s-badge__filled"
      },
      {
        "label": "Draft",
        "icon": "PencilSm",
        "class": "s-badge__info"
      },
      {
        "label": "Review",
        "icon": "EyeSm",
        "class": "s-badge__warning"
      },
      {
        "label": "Closed",
        "icon": "NotInterestedSm",
        "class": "s-badge__danger"
      },
      {
        "label": "Archived",
        "icon": "ArchiveSm",
        "class": "s-badge__muted"
      }
    ],
    "stats": [
      {
        "label": "votes",
        "name": "votes",
        "count": 10,
        "class": "s-post-summary--stats-item__emphasized",
        "show": true
      },
      {
        "label": "answers",
        "name": "answers",
        "count": 2,
        "show": true
      },
      {
        "label": "views",
        "name": "views",
        "count": 5,
        "show": true
      },
      {
        "label": "comments",
        "name": "comments",
        "count": 2
      },
      {
        "label": "min read",
        "name": "read-time",
        "count": 2
      }
    ],
    "title": "Network graph of popular tags on Stack Overflow",
    "excerpt": "I wanted to see how different tags related to each other. The below graph depicts associations between popular tags on our site. Description of analysis: I started looking at the 1000 most popular tags on questions in 2021. I created a list of tags cross joined by the question ID (so if a question contains tags for both Python and Numpy, it would show up in my list). I scaled up by the number of answers each question received (noting that some tag combos had 0 answers) -and then counted each distinct combination of each tag. Due to limitations in graphing, I only displayed the top ~2500 tag combinations - which accounts for tags combos that had more than 40 answers over the entire year.",
    "stateToggles": [
      {
        "class": "s-post-summary__deleted",
        "name": "Deleted",
        "controls": "#ps-playground",
        "id": "deleted"
      },
      {
        "class": "s-post-summary__ignored",
        "name": "Ignored",
        "controls": "#ps-playground",
        "id": "ignored"
      },
      {
        "class": "s-post-summary__watched",
        "name": "Watched",
        "controls": "#ps-playground",
        "id": "watched"
      }
    ],
    "layoutToggles": [
      {
        "class": "s-post-summary__minimal",
        "name": "Minimal layout",
        "controls": "#ps-playground",
        "id": "layout"
      }
    ],
    "statToggles": [
      {
        "name": "Bounty",
        "controls": "#ps-bounty",
        "id": "bounty"
      }
    ],
    "otherToggles": [
      {
        "name": "Include answers",
        "controls": "#ps-answers",
        "id": "answers"
      },
      {
        "name": "Collective",
        "controls": "#ps-collective",
        "id": "collective"
      },
      {
        "class": "s-post-summary__watched",
        "name": "Type",
        "controls": "#ps-type",
        "id": "type"
      }
    ],
    "excerptSizes": ["none", "sm", "md", "lg"],
    "hotness": ["warm", "hot", "supernova"],
    "answerStates": [
      {
        "class": "has-answers",
        "name": "Has answers"
      },
      {
        "class": "has-answers has-accepted-answer",
        "name": "Accepted"
      }
    ],
    "user": "Francis van Puffelen",
    "rep": "1,234",
    "when": "10 minutes ago",
    "tags": [
      {
        "label": "bug",
        "class": "s-tag__required"
      },
      {
        "label": "status-review",
        "class": "s-tag__moderator"
      },
      {
        "label": "data"
      },
      {
        "label": "asp"
      },
      {
        "label": "asp.net"
      },
      {
        "label": "firebase-realtime-database",
        "class": "s-tag__ignored"
      },
      {
        "label": "javascript",
        "class": "s-tag__watched"
      },
      {
        "label": "jquery"
      },
      {
        "label": "svelte"
      },
      {
        "label": "backbonejs"
      }
    ],
    "answers": [
      {
        "votes": 2,
        "accepted": true,
        "excerpt": "Subscription keys in APIM are tied to a user and product, thus if you change (or create new one) product to not require subscription (option available at creation time or in product settings) no subscription key would be needed to call any API included into such products. The downside is that all such calls would be treated by APIM as anonymous and shown in analytics as such.",
        "name": "Aaron Shekey",
        "time": "1 minute ago"
      },
      {
        "votes": 2,
        "accepted": true,
        "excerpt": "Yeah, you can do that (a bit of a hack). You have to use REST Api for that, specifically this call. For me it didn't work to edit the existing API (they key was still there), but when I've created new API, key wasn't there:",
        "name": "4c74356b41",
        "time": "3 minutes ago"
      }
    ]
  }
}