const testHTML = {
  css: `<code><br/><span class="hljs-selector-class">.s-input</span>,<br><span class="hljs-selector-class">.s-textarea</span> {<br>    -webkit-appearance: none;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;<br>    <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;<br>    <span class="hljs-attribute">padding</span>: <span class="hljs-number">0.6em</span> <span class="hljs-number">0.7em</span>;<br>    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid <span class="hljs-built_in">var</span>(--bc-darker);<br>    <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">3px</span>;<br>    <span class="hljs-attribute">background-color</span>: <span class="hljs-built_in">var</span>(--white);<br>    <span class="hljs-attribute">color</span>: <span class="hljs-built_in">var</span>(--fc-dark);<br>    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">13px</span>;<br>    <span class="hljs-attribute">font-family</span>: inherit;<br>    <span class="hljs-attribute">line-height</span>: <span class="hljs-number">1.15384615</span>;<br>    <span class="hljs-attribute">scrollbar-color</span>: <span class="hljs-built_in">var</span>(--scrollbar) transparent;<br>}<br><span class="hljs-keyword">@supports</span> (<span class="hljs-attribute">-webkit-overflow-scrolling</span>: touch) {<br>    <span class="hljs-selector-class">.s-input</span>,<br>    <span class="hljs-selector-class">.s-textarea</span> {<br>        <span class="hljs-attribute">font-size</span>: <span class="hljs-number">16px</span>;<br>        <span class="hljs-attribute">padding</span>: <span class="hljs-number">0.36em</span> <span class="hljs-number">0.55em</span>;<br>    }<br>    <span class="hljs-selector-class">.s-input</span>::-webkit-input-placeholder,<br>    .s-textarea::-webkit-input-placeholder {<br>        <span class="hljs-attribute">line-height</span>: normal <span class="hljs-meta">!important</span>;<br>    }<br>}</code>`,
  html: `<code><br/><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"d-flex gy4 fd-column"</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"flex--item s-label"</span> <span class="hljs-attr">for</span>=<span class="hljs-string">"question-title"</span>&gt;</span>Question title<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"d-flex ps-relative"</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"flex--item s-input"</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text"</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"question-title"</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">"e.g. Why doesnâ€™t Stack Overflow use a custom web font?"</span>/&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span></code>`, 
  javascript: `<code><br/><span class="hljs-keyword">import</span> <span class="hljs-title class_">React</span>, { <span class="hljs-title class_">Component</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">'react'</span><br><span class="hljs-keyword">import</span> { <span class="hljs-variable constant_">IP</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">'../constants/IP'</span><br><span class="hljs-keyword">import</span> { withAuth0 } <span class="hljs-keyword">from</span> <span class="hljs-string">'@auth0/auth0-react'</span>;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">AddATournament</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_ inherited__">Component</span> {<br>    <span class="hljs-title function_">componentDidMount</span>(<span class="hljs-params"></span>) {<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">myNewListOfAllTournamentsWithAuth</span>()<br>    }<br>}<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-title function_">withAuth0</span>(<span class="hljs-title class_">AddATournament</span>);</code>`,
}

export type Language = "css" | "html" | "javascript";

export default testHTML;