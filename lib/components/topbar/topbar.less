.topbar-notice-styles(@border: transparent, @background: transparent, @color: inherit) {
    border-color: @border;
    background-color: @background;
    color: @color;
}

.s-topbar {
    --_tb-focus-color-inner: var(--white);
    --_tb-focus-color-outer: var(--theme-secondary-400);

    min-width: auto;
    width: 100%;
    z-index: var(--zi-navigation-fixed);
    background-color: var(--theme-topbar-background-color, var(--white));
    height: var(--theme-topbar-height, calc(var(--su-static48) + var(--su-static8)));
    display: flex;
    border-top: var(--theme-topbar-accent-border, 3px solid var(--theme-primary));
    border-bottom: var(--theme-topbar-bottom-border, 1px solid var(--black-225));
    position: relative;
    align-items: center;

    // Redefine the variables for extra contrast in high-contrast mode
    .highcontrast-mode({
        // Search input
        --theme-topbar-search-color: var(--theme-topbar-item-color, var(--black-400));
        --theme-topbar-search-background: var(--theme-topbar-background-color, var(--white));
        --theme-topbar-search-placeholder: var(--theme-topbar-item-color, var(--black-400));
        --theme-topbar-search-border: var(--theme-topbar-item-color, var(--black-400));

        // Search switcher
        --theme-topbar-select-color: var(--theme-topbar-item-color, var(--black-400));
        --theme-topbar-select-background: var(--theme-topbar-background-color, var(--white));

        // Topbar items
        --theme-topbar-item-color: var(--black-600);
        --theme-topbar-item-color-hover: var(--black-600);
        --theme-topbar-item-background-hover: var(--black-200);
        --theme-topbar-item-color-current: var(--black);
    });

    .highcontrast-mode({ border-bottom: 1px solid currentColor; });

    // Overrides for focus style colors in forced light variant
    &&__light {
        --_tb-focus-color-inner: .set-white()[default]; // forces white for inner focus ring color
    }

    .dark-mode({
        &.s-topbar__light {
            --_tb-focus-color-outer: var(--theme-dark-secondary-custom-200, .set-theme-secondary-default()[200]);
        }
    });

    .highcontrast-dark-mode({
        &.s-topbar__light {
            --_tb-focus-color-outer: .set-theme-secondary-default()[200];
        }
    });

    // Overrides for focus style colors in forced dark variant
    .highcontrast-mode({
        &.s-topbar__dark {
            --_tb-focus-color-outer: .theme-dark-default()[secondary];
        }
    });

    &&__dark {
        --_tb-focus-color-inner: .set-black()[600]; // set to match .s-topbar__dark --theme-topbar-background-color;
        --_tb-focus-color-outer: var(--theme-dark-secondary-custom-400, .theme-dark-default()[secondary]);
    }


    // focus styles
    a&--logo,
    & &--content &--item:not(&--item__unset),
    &--notice,
    .s-navigation .s-navigation--item {
        &:focus-visible {
            box-shadow: inset 0 0 0 var(--su-static2) var(--_tb-focus-color-outer), inset 0 0 0 var(--su-static4) var(--_tb-focus-color-inner);
            outline: var(--su-static2) solid transparent;
        }
    }

    // TODO investigate removing once .s-input and .s-select have updated focus styles
    & .s-topbar--searchbar {
        .s-topbar--searchbar--input-group .s-input,
        .s-select > select {
            &:focus-visible {
                // border-color: var(--_tb-focus-color-outer) !important;
                box-shadow: 0 0 0 var(--su-static2) var(--_tb-focus-color-inner), 0 0 0 var(--su-static4) var(--_tb-focus-color-outer) !important;
                outline: var(--su-static2) solid transparent !important;
            }
        }
    }

    // Wraps the content so the topbar stretches 100% w/ content at some value below that
    .s-topbar--container {
        width: var(--s-full); // wmx12; Consumers should use atomic classes to override this
        max-width: 100%;
        height: 100%;
        display: flex;
        margin: 0 auto;
        align-items: center;
    }

    .s-topbar--logo {
        padding: 0 var(--su8);
        height: 100%;
        display: flex;
        align-items: center;
        background-color: transparent;
        border-radius: var(--br-sm);
    }

    a.s-topbar--logo {
        &:hover {
            background-color: var(--theme-topbar-item-background-hover, var(--black-200));
        }

        &.is-selected {
            background-color: var(--theme-topbar-item-background-hover, var(--black-200));
        }
    }

    .s-topbar--menu-btn {
        display: flex;
        height: 100%;
        padding: 0 var(--su16);
        flex-shrink: 0;
        align-items: center;
        justify-content: center;

        // Build a hamburger icon manually using spans instead of using `@Svg` helper so
        // we can more easily animate its content and transform the hamburger into an x
        span {
            &,
            &:before,
            &:after {
                width: var(--su-static16);
                height: var(--su-static2);
                background-color: var(--theme-topbar-item-color, var(--black-400));
                position: relative;
            }

            &:before,
            &:after {
                position: absolute;
                content: '';
                left: 0;
                top: calc(var(--su-static1) - var(--su-static6)); // -5px
                transition: top, transform;
                transition-duration: 0.1s;
                transition-timing-function: ease-in-out;
            }

            &:after {
                top: calc(var(--su-static6) - var(--su-static1)); // 5px
            }
        }

        // Transforming hamburger into x
        &.is-selected {
            color: var(--theme-topbar-item-color-current, var(--black));
            background-color: var(--theme-topbar-item-background-current);

            span {
                background-color: transparent;

                &:before,
                &:after {
                    top: 0;
                    transform: rotate(-45deg);
                }

                &:after { transform: rotate(45deg); }
            }
        }

        &:hover {
            color: var(--theme-topbar-item-color-hover, var(--black-400));
            background-color: var(--theme-topbar-item-background-hover, var(--black-200));
        }
    }

    .s-navigation {
        .s-navigation--item:not(.is-selected) {
            color: var(--theme-topbar-item-color, var(--black-400));
        }

        .s-navigation--item:not(.is-selected):hover {
            color: var(--theme-topbar-item-color-hover, var(--black-400));
            background-color: var(--theme-topbar-item-background-hover, var(--black-200));
        }
    }
    .s-popover .s-navigation {
        .s-navigation--item {
            &:not(.is-selected) {
                &:hover {
                    color: var(--black-600);
                    background-color: var(--black-200);
                }

                color: var(--black-500);
            }
        }
    }
}

//  ===========================================================================
//  $   LIGHT
//  ---------------------------------------------------------------------------
.s-topbar__light {
    // TODO this only works 100% perfectly in light mode, due to child elements inheriting current theme colors
    // TODO extend forced light mode instead of overriding

    --theme-topbar-background-color: var(--_white-static);
    --theme-topbar-bottom-border: 1px solid .set-black()[225];

    // Search input
    --theme-topbar-search-color: .set-black()[500];
    --theme-topbar-search-background: var(--_white-static);
    --theme-topbar-search-placeholder: .set-black()[400];
    --theme-topbar-search-border: .set-black()[300];

    // Search switcher
    --theme-topbar-select-color: .set-black()[500];
    --theme-topbar-select-background: .set-black()[200];

    // Items
    --theme-topbar-item-color: .set-black()[400];
    --theme-topbar-item-color-hover: .set-black()[500];
    --theme-topbar-item-background-hover: .set-black()[200];
    --theme-topbar-item-color-current: var(--_black-static);
    // --theme-topbar-item-border-current: var(--theme-primary); // As of Stacks v2, this is unused

    // TODO HACK remove everything below once light/dark topbars are inheriting forced themes correctly
    // redefine the variables for extra contrast in high-contrast mode
    .highcontrast-mode({
        // Topbar items
        --theme-topbar-item-color: .set-black()[600];
        --theme-topbar-item-color-hover: .set-black()[600]; // TODO hover is now identical color to base color
        --theme-topbar-item-background-hover: .set-black()[200];
        --theme-topbar-item-color-current: var(--_black-static);
    });

    --scrollbar: hsla(0, 0%, 0%, 0.2);
}

//  ===========================================================================
//  $   DARK
//  ---------------------------------------------------------------------------
.s-topbar__dark {
    // TODO this only works 100% perfectly in dark mode, due to child elements inheriting current theme colors
    // TODO extend forced dark mode instead of overriding

    @topbar-actual-background: .set-black()[600];
    // TODO
    #calc-topbar-lightness-increase() when (lightness(@topbar-actual-background) < 15%) {
        @topbar-search-lightness-increase: 20%;
    }
    #calc-topbar-lightness-increase() when not (lightness(@topbar-actual-background) < 15%) {
        @topbar-search-lightness-increase: 10%;
    }
    #calc-topbar-lightness-increase();

    --theme-topbar-background-color: @topbar-actual-background;
    --theme-topbar-bottom-border: 1px solid @topbar-actual-background;

    // Search input
    --theme-topbar-search-color: lighten(@topbar-actual-background, 80% + @topbar-search-lightness-increase);
    --theme-topbar-search-background: lighten(@topbar-actual-background, @topbar-search-lightness-increase);
    --theme-topbar-search-placeholder: lighten(@topbar-actual-background, 60% + @topbar-search-lightness-increase);
    --theme-topbar-search-border: lighten(@topbar-actual-background, 20% + @topbar-search-lightness-increase);

    // Search switcher
    --theme-topbar-select-color: lighten(@topbar-actual-background, 60% + @topbar-search-lightness-increase);
    --theme-topbar-select-background: lighten(@topbar-actual-background, 10% + @topbar-search-lightness-increase);

    // Items
    --theme-topbar-item-color: .set-black()[225];
    --theme-topbar-item-color-hover: var(--_white-static);
    --theme-topbar-item-background-hover: .set-black()[500];
    --theme-topbar-item-color-current: var(--_white-static);
    // --theme-topbar-item-border-current: var(--theme-primary); // As of Stacks v2, this is unused

    // Themed border accent
    --theme-topbar-accent-border: none;

    // TODO HACK remove everything below once light/dark topbars are inheriting forced themes correctly
    // redefine the variables for extra contrast in high-contrast mode
    .highcontrast-mode({
        // Topbar items
        --theme-topbar-item-color: var(--_white-static);
        --theme-topbar-item-color-hover: var(--_white-static);
        --theme-topbar-item-background-hover: .set-black()[500];
        --theme-topbar-item-color-current: var(--_white-static);

        .s-badge {
            border-color: currentColor;
        }
    });

    --scrollbar: hsla(0, 0%, 100%, 0.2);
}

//  ===========================================================================
//  $   CONTENT & CTAS
//  ---------------------------------------------------------------------------
.s-topbar--navigation {
    display: flex;
    height: 100%;

    overflow-x: auto; // Allow this content to scroll if it gets too long
    @scrollbar-styles(); // Style the scrollbars
    margin-left: auto; // Push this section as far to the right as possible
}

.s-topbar .s-topbar--content {
    display: flex;
    height: 100%;
    .list-reset;

    & > li {
        display: inline-flex;
    }

    // TODO remove once all topbars include necessary nav.s-topbar--navigation wrapper elements
    overflow-x: auto; // Allow this content to scroll if it gets too long
    @scrollbar-styles(); // Style the scrollbars
    margin-left: auto; // Push this section as far to the right as possible

    .s-topbar--item:not(.s-topbar--item__unset) {
        color: var(--theme-topbar-item-color, var(--black-400));
        display: inline-flex;
        align-items: center;
        padding: 0 calc(var(--su12) - var(--su2));
        text-decoration: none;
        white-space: nowrap;
        position: relative;
        border-radius: var(--br-sm);

        &:hover,
        &.is-selected,
        &.is-selected:hover {
            color: var(--theme-topbar-item-color-hover, var(--black-600));
            background-color: var(--theme-topbar-item-background-hover, var(--black-200));
            text-decoration: none;

            .s-activity-indicator {
                top: calc(50% - calc(var(--su16) + var(--su2))); // 50% - 18px
                box-shadow: 0 0 0 var(--su-static2) var(--theme-topbar-item-background-hover, var(--black-200));
            }
        }

        .svg-icon {
            vertical-align: text-top;
        }

        .s-activity-indicator {
            position: absolute;
            top: calc(50% - calc(var(--su12) + var(--su2))); // 50% - 14px
            right: var(--su-static2);
            transition: top var(--te-smooth) 0.15s;
            box-shadow: 0 0 0 var(--su-static2)  var(--theme-topbar-background-color, var(--white));
        }
    }

    // provide only layout styling for unset items
    .s-topbar--item__unset {
        align-self: center;
        padding-top: var(--su8);
        padding-bottom: var(--su8);
    }
}

//  ===========================================================================
//  $   NOTICE
//  ---------------------------------------------------------------------------
.s-topbar--notice {
    &:extend(.s-badge);

    text-transform: uppercase;
    font-size: var(--fs-fine);
    font-weight: 700;
    margin-left: var(--su8);
    margin-right: var(--su8);
    flex-shrink: 0;

    .topbar-notice-styles(transparent, transparent, var(--theme-topbar-item-color, var(--black-400)));

    &:hover {
        .topbar-notice-styles(var(--theme-topbar-item-background-hover, var(--black-200)), var(--theme-topbar-item-background-hover, var(--black-200)), var(--theme-topbar-item-color-hover, var(--black-600)));
    }

    &.is-unread {
        .topbar-notice-styles(var(--theme-primary), var(--theme-primary), var(--white));

        &:hover {
            .topbar-notice-styles(var(--theme-primary-500), var(--theme-primary-500), var(--white));
        }
    }
}

//  ===========================================================================
//  $   SEARCHBAR
//  ---------------------------------------------------------------------------
.s-topbar .s-topbar--searchbar {
    @inputLineHeights: var(--lh-sm); // Ensure the line heights between the elements match up
    padding: 0 var(--su8);
    display: flex;
    align-items: center;
    flex-shrink: 10000; // Force the searchbar to shrink as much as possible if there's no extra space
    flex-grow: 1; //...but allow it to grow if there *is* extra space

    .s-topbar--searchbar--input-group {
        position: relative;
        flex-grow: 1;

        .s-input {
            &:not(:focus-visible) {
                box-shadow: var(--theme-topbar-search-shadow);
            }

            background-color: var(--theme-topbar-search-background, var(--white));
            border-color: var(--theme-topbar-search-border, var(--black-300));
            color: var(--theme-topbar-search-color, var(--black-500));
            display: block;
            line-height: @inputLineHeights;

            &::placeholder {
                color: var(--theme-topbar-search-placeholder, var(--black-400));
                font-style: normal;
            }
        }

        .s-input-icon {
            color: var(--theme-topbar-search-placeholder, var(--black-400));
        }
    }

    .s-select {
        .wmx2;

        align-self: stretch;
        margin-right: calc(var(--su-static1) * -1); //-1px
        color: var(--theme-topbar-select-color, var(--black-500));

        &:before,
        &:after {
            z-index: var(--zi-active); // Make sure our focus ring is above the search input
        }
    }

    .s-select > select {
        border-color: var(--theme-topbar-search-border, var(--black-300));

        &:focus-visible {
            z-index: var(--zi-selected);
        }

        .brr0;
        height: 100%;
        line-height: @inputLineHeights;
        background-color: var(--theme-topbar-select-background, var(--black-200));
        color: var(--theme-topbar-select-color, var(--black-500));

    }

    // Drop the left border of the search input when it is next to the select
    .s-select + .s-topbar--searchbar--input-group > .s-input {
        .blr0;
    }

    #stacks-internals #screen-sm({
        display: none;
        position: absolute;
        left: 0;
        right: 0;
        top: 100%;
        max-width: 100%;
        padding: var(--su8) var(--su12);
        background: var(--theme-topbar-item-background-hover, var(--black-200));

        &.s-topbar--searchbar__open {
            display: flex;
            max-width: none;
        }

        .s-select {
            .w25;
        }
    });
}
