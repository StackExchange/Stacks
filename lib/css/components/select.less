.s-select {
    --_se-arrow-size: var(--su-static4); // Constant // TODO create name/styling convension for constants
    --_se-select-br: var(--br-sm);
    --_se-select-px: 0.7em;
    --_se-select-py: 0.6em;
    --_se-select-fs: var(--fs-body1);

    // CONTEXTUAL STYLES
    @supports (-webkit-overflow-scrolling: touch) {
        --_se-select-fs: 16px; // Increase font size for mobile safari. This keeps our inputs from zooming the page while focused
        --_se-select-px: 0.55em; // Compensate for the larger font size so we generally keep the input the same size
        --_se-select-py: 0.4em; // Compensate for the larger font size so we generally keep the input the same size
    }

    // MODIFIERS
    &&__sm {
        --_se-select-fs: var(--fs-caption);
    }
    &&__md {
        --_se-select-br: calc(var(--br-sm) + var(--su-static1));
        --_se-select-fs: var(--fs-body3);
        --_se-select-py: 0.5em;
    }
    &&__lg {
        --_se-select-br: calc(var(--br-sm) + var(--su-static1));
        --_se-select-fs: var(--fs-title);
        --_se-select-px: 0.6em;
        --_se-select-py: 0.45em;
    }
    &&__xl {
        --_se-select-br: var(--br-md);
        --_se-select-fs: var(--fs-headline1);
        --_se-select-px: 0.5em;
        --_se-select-py: 0.4em;
    }

    // CHILD ELEMENTS
    &,
    & > select {
        &::-webkit-contacts-auto-fill-button {
            background-color: var(--black); // In Safari, make the autocomplete button darkmode-aware
        }

        &:-webkit-autofill {
            border-color: var(--blue-300);
            -webkit-text-fill-color: var(--black);
            -webkit-box-shadow: 0 0 0 1000px var(--theme-secondary-050) inset; // This acts as a background color by stretching an inset box shadow across the input
            transition: background-color 0s 50000s; // A hack to infinitely delay background styles that come from the browser.

            &:focus {
                border-color: var(--blue-300);
                // Since the box shadow is overwritten to show a background, we have to re-add the focus outline
                -webkit-box-shadow: 0 0 0 1000px var(--blue-050) inset, 0 0 0 var(--su-static4) var(--focus-ring);
            }
        }
    }
    &:before,
    &:after { // menu arrows
        border-color: currentColor transparent;
        border-style: solid;
        border-width: var(--_se-arrow-size);
        content: "";
        pointer-events: none;
        position: absolute;
        right: calc(var(--su-static12) + var(--su-static1));
        z-index: var(--zi-selected);
    }
    &:after {
        border-bottom-width: 0;
        top: calc(50% + var(--su-static1));
    }
    &:before {
        border-top-width: 0;
        top: calc(50% - calc(var(--_se-arrow-size) + var(--su-static1)));
    }
    > select { // Menu
        &::-moz-focus-inner {
            outline: none !important;
        }
        &:-moz-focusring {
            color: transparent;
            text-shadow: 0 0 0 #000;
        }
        &::-ms-expand {
            display: none;
        }
        &[disabled] {
            cursor: not-allowed;
            opacity: var(--_o-disabled-static);
        }
        &[readonly],
        .is-readonly & { // [1] // TODO use PPCP
            .highcontrast-mode({
                color: var(--fc-light);
            });

            border-color: var(--bc-light);
            background-color: var(--black-050);
            color: var(--black-200);
            cursor: not-allowed;
        }
        &:focus {
            @input-focus-style();
        }

        border-radius: var(--_se-select-br);
        font-size: var(--_se-select-fs);
        padding: var(--_se-select-py) var(--_se-select-px);

        -moz-appearance: none;
        -webkit-appearance: none;
        appearance: none;
        background-color: var(--white);
        border: var(--su-static1) solid var(--bc-darker);
        color: var(--black);
        font-family: inherit;
        height: 100%; // Fill the height of its parent
        line-height: var(--lh-sm);
        outline: 0;
        padding-right: var(--su32);
        position: relative; // This prevents Firefox from requiring a second click to select options
        width: 100%;
    }

    color: var(--fc-dark);
    position: relative;
}

// [1] The readonly attribute is not supported on select elements
//      See https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/readonly
//      and https://github.com/StackExchange/Stacks/pull/1040#discussion_r931144086
