.topbar-notice-styles(@border: transparent, @background: transparent, @color: inherit) {
    border-color: @border;
    background-color: @background;
    color: @color;
}

.s-topbar {
    // BASE COMPONENT-SPECIFIC CUSTOM PROPERTIES
    // VARIANT CUSTOM PROPERTIES
    // CHILD COMPONENT CUSTOM PROPERTIES

    // CONTEXTUAL STYLES
    .highcontrast-mode({ // Redefine the variables for extra contrast in high-contrast mode
        // Search input
        --theme-topbar-search-color: var(--theme-topbar-item-color);
        --theme-topbar-search-background: var(--theme-topbar-background-color);
        --theme-topbar-search-placeholder: var(--theme-topbar-item-color);
        --theme-topbar-search-border: var(--theme-topbar-item-color);
        --theme-topbar-search-border-focus: var(--theme-topbar-item-color);

        // Search switcher
        --theme-topbar-select-color: var(--theme-topbar-item-color);
        --theme-topbar-select-background: var(--theme-topbar-background-color);

        // Topbar items
        --theme-topbar-item-color: var(--black-800);
        --theme-topbar-item-color-hover: var(--black-900);
        --theme-topbar-item-background-hover: var(--black-200);
        --theme-topbar-item-color-current: var(--black);

        &&__dark {
            // TODO HACK remove everything below once light/dark topbars are inheriting forced themes correctly
            // redefine the variables for extra contrast in high-contrast mode

            // Topbar items
            --theme-topbar-item-color: @white;
            --theme-topbar-item-color-hover: @white;
            --theme-topbar-item-background-hover: @black-700;
            --theme-topbar-item-color-current: @white;

            .s-badge {
                border-color: currentColor;
            }
        }

        &&__light {
            // TODO HACK remove everything below once light/dark topbars are inheriting forced themes correctly
            // redefine the variables for extra contrast in high-contrast mode

            // Topbar items
            --theme-topbar-item-color: @black-800;
            --theme-topbar-item-color-hover: @black-900;
            --theme-topbar-item-background-hover: @black-075;
            --theme-topbar-item-color-current: @black;
        }

        border-bottom: var(--su-static1) solid currentColor;
    });

    // STATES
    // MODIFIERS
    // VARIANTS
    &&__dark {
        // TODO this only works 100% perfectly in dark mode, due to child elements inheriting current theme colors
        // TODO extend forced dark mode instead of overriding
        @topbar-actual-background: @black-800;
        // TODO
        #calc-topbar-lightness-increase() when (lightness(@topbar-actual-background) < 15%) {
            @topbar-search-lightness-increase: 20%;
        }
        #calc-topbar-lightness-increase() when not (lightness(@topbar-actual-background) < 15%) {
            @topbar-search-lightness-increase: 10%;
        }
        #calc-topbar-lightness-increase();

        --theme-topbar-background-color: @topbar-actual-background;

        // Search input
        --theme-topbar-search-color: lighten(@topbar-actual-background, 80% + @topbar-search-lightness-increase);
        --theme-topbar-search-background: lighten(@topbar-actual-background, @topbar-search-lightness-increase);
        --theme-topbar-search-placeholder: lighten(@topbar-actual-background, 60% + @topbar-search-lightness-increase);
        --theme-topbar-search-border: lighten(@topbar-actual-background, 20% + @topbar-search-lightness-increase);
        --theme-topbar-search-border-focus: lighten(@topbar-actual-background, 45% + @topbar-search-lightness-increase);
        --theme-topbar-search-shadow-focus: 0 0 0 var(--su-static4) fade(@white, 30%);

        // Search switcher
        --theme-topbar-select-color: lighten(@topbar-actual-background, 60% + @topbar-search-lightness-increase);
        --theme-topbar-select-background: lighten(@topbar-actual-background, 10% + @topbar-search-lightness-increase);

        // Items
        --theme-topbar-item-color: @black-100;
        --theme-topbar-item-color-hover: @white;
        --theme-topbar-item-background-hover: @black-700;
        --theme-topbar-item-color-current: @white;
        --theme-topbar-item-border-current: var(--theme-primary-color);

        // Themed border accent
        --theme-topbar-accent-border: none;

        --scrollbar: hsla(0, 0%, 100%, 0.2);
    }

    &&__light {
        // TODO this only works 100% perfectly in light mode, due to child elements inheriting current theme colors
        // TODO extend forced light mode instead of overriding

        --theme-topbar-background-color: @black-025;

        // Search input
        --theme-topbar-search-color: @black-700;
        --theme-topbar-search-background: @white;
        --theme-topbar-search-placeholder: @black-400;
        --theme-topbar-search-border: @black-200;
        --theme-topbar-search-border-focus: @blue-300;
        --theme-topbar-search-shadow-focus: 0 0 0 var(--su-static4) var(--focus-ring);

        // Search switcher
        --theme-topbar-select-color: @black-700;
        --theme-topbar-select-background: @black-050;

        // Items
        --theme-topbar-item-color: @black-600;
        --theme-topbar-item-color-hover: @black-800;
        --theme-topbar-item-background-hover: @black-075;
        --theme-topbar-item-color-current: @black;
        --theme-topbar-item-border-current: var(--theme-primary-color);

    
        .highcontrast-mode({
        });

        --scrollbar: hsla(0, 0%, 0%, 0.2);
    }

    // CHILD ELEMENTS
    & a&--logo {
        &.is-selected {
            background-color: var(--theme-topbar-item-background-hover);

        }
        &:hover {
            background-color: var(--theme-topbar-item-background-hover);
        }
    }

    & &--container { // Wraps the content so the topbar stretches 100% w/ content at some value below that
        align-items: center;
        display: flex;
        height: 100%;
        margin: 0 auto;
        max-width: 100%;
        width: var(--s-full); // wmx12; Consumers should use atomic classes to override this
    }

    & &--content {
        display: flex;
        height: 100%;
        .list-reset;

        & > li {
            display: inline-flex;
        }

        // TODO remove once all topbars include necessary nav.s-topbar--navigation wrapper elements
        overflow-x: auto; // Allow this content to scroll if it gets too long
        @scrollbar-styles(); // Style the scrollbars
        margin-left: auto; // Push this section as far to the right as possible

        .s-topbar--item:not(.s-topbar--item__unset) {
            .s-activity-indicator {
                box-shadow: 0 0 0 var(--su-static2)  var(--theme-topbar-background-color);
                position: absolute;
                right: 2px;
                top: calc(50% - 14px);
                transition: top var(--te-smooth) 0.15s;
            }

            .svg-icon {
                vertical-align: text-top;
            }

            &:hover,
            &:focus,
            &.is-selected,
            &.is-selected:hover,
            &.is-selected:focus {
                .s-activity-indicator {
                    box-shadow: 0 0 0 var(--su-static2) var(--theme-topbar-item-background-hover);
                    top: calc(50% - 18px);
                }

                background-color: var(--theme-topbar-item-background-hover);
                color: var(--theme-topbar-item-color-hover);
                outline: none;
                text-decoration: none;
            }

            align-items: center;
            color: var(--theme-topbar-item-color);
            display: inline-flex;
            padding: 0 calc(var(--su12) - var(--su2));
            position: relative;
            text-decoration: none;
            white-space: nowrap;
        }

        .s-topbar--item__unset { // provide only layout styling for unset items
            align-self: center;
            padding-bottom: var(--su8);
            padding-top: var(--su8);
        }
    }

    & &--logo {
        padding: 0 var(--su8);
        height: 100%;
        display: flex;
        align-items: center;
        background-color: transparent;
    }

    & &--menu-btn {
        span { // [1]
            &,
            &:after,
            &:before {
                background-color: var(--theme-topbar-item-color);
                height: var(--su-static2);
                width: var(--su-static16);
            }

            &:after,
            &:before {
                content: '';
                left: 0;
                position: absolute;
                transition-duration: 0.1s;
                transition-timing-function: ease-in-out;
                transition: top, transform;
            }

            &:after {
                top: 5px;
            }
            &:before {
                top: -5px;
            }

            position: relative;
        }

        &.is-selected { // Transforming hamburger into x
            span {
                &:after,
                &:before {
                        top: 0;
                }

                &:after {
                    transform: rotate(45deg);
                }

                &:before {
                    transform: rotate(-45deg);
                }

                background-color: transparent;
            }

            background-color: var(--theme-topbar-item-background-current);
            color: var(--theme-topbar-item-color-current);
        }

        &:hover {
            color: var(--theme-topbar-item-color-hover);
            background-color: var(--theme-topbar-item-background-hover);
        }

        align-items: center;
        display: flex;
        flex-shrink: 0;
        height: 100%;
        justify-content: center;
        padding: 0 var(--su16);
    }

    & &--navigation {
        @scrollbar-styles(); // Style the scrollbars
        display: flex;
        height: 100%;
        margin-left: auto; // Push this section as far to the right as possible
        overflow-x: auto; // Allow this content to scroll if it gets too long
    }

    & &--notice {
        &:extend(.s-badge);

        .topbar-notice-styles(transparent, transparent, var(--theme-topbar-item-color));

        &.is-unread {
            &:hover,
            &:focus {
                .topbar-notice-styles(var(--theme-primary-600), var(--theme-primary-600), var(--white));
            }

            .topbar-notice-styles(var(--theme-primary-color), var(--theme-primary-color), var(--white));
        }

        &:hover,
        &:focus {
            .topbar-notice-styles(var(--theme-topbar-item-background-hover), var(--theme-topbar-item-background-hover), var(--theme-topbar-item-color-hover));
        }

        flex-shrink: 0;
        font-size: var(--fs-fine);
        font-weight: 700;
        margin-left: var(--su8);
        margin-right: var(--su8);
        text-transform: uppercase;
    }

    & &--searchbar {
        #stacks-internals #screen-sm({ // TODO Consider moving to CONDITIONAL STYLES section
            background: var(--theme-topbar-item-background-hover);
            display: none;
            left: 0;
            max-width: 100%;
            padding: var(--su8) var(--su12);
            position: absolute;
            right: 0;
            top: 100%;

            .s-select {
                .w25;
            }

            &.s-topbar--searchbar__open {
                display: flex;
                max-width: none;
            }
        });

        .s-topbar--searchbar--input-group {
            .s-input {
                &::placeholder {
                    color: var(--theme-topbar-search-placeholder);
                    font-style: normal;
                }

                &:focus {
                    border-color: var(--theme-topbar-search-border-focus);
                    box-shadow: var(--theme-topbar-search-shadow-focus);
                }

                background-color: var(--theme-topbar-search-background);
                border-color: var(--theme-topbar-search-border);
                box-shadow: var(--theme-topbar-search-shadow);
                color: var(--theme-topbar-search-color);
                display: block;
                line-height: @inputLineHeights;
            }

            .s-input-icon {
                color: var(--theme-topbar-search-placeholder);
            }

            flex-grow: 1;
            position: relative;
        }

        .s-select {
            &:after,
            &:before {
                z-index: var(--zi-active); // Make sure our focus ring is above the search input
            }

            & > select {
                &:focus {
                    border-color: var(--theme-topbar-search-border-focus);
                    box-shadow: var(--theme-topbar-search-shadow-focus);
                    z-index: var(--zi-selected);
                }

                .brr0;
                background-color: var(--theme-topbar-select-background);
                border-color: var(--theme-topbar-search-border);
                color: var(--theme-topbar-select-color);
                height: 100%;
                line-height: @inputLineHeights;
            }

            & + .s-topbar--searchbar--input-group > .s-input { // Drop the left border of the search input when it is next to the select
                .blr0;
            }

            .wmx2; // TODO
            align-self: stretch;
            color: var(--theme-topbar-select-color);
            margin-right: -1px;
        }

        @inputLineHeights: var(--lh-sm); // Ensure the line heights between the elements match up
        align-items: center;
        display: flex;
        flex-grow: 1; // Allow the searchbar to grow if there *is* extra space
        flex-shrink: 10000; // Force the searchbar to shrink as much as possible if there's no extra space
        padding: 0 var(--su8);
    }

    .s-navigation {
        .s-navigation {
            &--item {
                &:not(.is-selected) {
                    &:hover {
                        color: var(--theme-topbar-item-color-hover);
                        background-color: var(--theme-topbar-item-background-hover);
                    }

                    color: var(--theme-topbar-item-color);
                }

                &:focus-visible {
                    box-shadow: var(--theme-topbar-search-shadow-focus);
                }
            }
        }

    }
    // INTERACTION
    // STYLES MODIFIED BY COMPONENT-SPECIFIC CUSTOM PROPERTIES

    // STATIC COMPONENT STYLES
    align-items: center;
    background-color: var(--theme-topbar-background-color);
    border-top: var(--theme-topbar-accent-border);
    box-shadow: var(--bs-sm);
    display: flex;
    height: var(--theme-topbar-height);
    min-width: auto;
    position: relative;
    width: 100%;
    z-index: var(--zi-navigation-fixed);
}

//  [1] Build a hamburger icon manually using spans instead of using `@Svg` helper so
//      we can more easily animate its content and transform the hamburger into an x
