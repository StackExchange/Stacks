//
//  STACK OVERFLOW
//  CONSTANTS -- HELPERS
//
//  This CSS comes from Stacks, our CSS & Pattern library for rapidly building
//  Stack Overflow. For documentation of all these classes and how to contribute,
//  visit https://stackoverflow.design/
//
//  These are helper variables to quickly set values.
//  These SHOULD NOT be reset.
//
//  Table of Contents
//  • z-index (zi-)
//  • border-radius (br-)
//  • box-shadow (bs-)
//  • spacing units (su-)
//  • transition easings (te-)
//
//  ============================================================================
//  $   Z-INDEX (zi-)
//      Used for a bird's eye view of components dependent on the z-axis.
//      Try to avoid customizing these.
//  ----------------------------------------------------------------------------
@zi-hide:               -1;     //  Hide something all the elements
@zi-base:               0;      //  Reset to 0
@zi-selected:           25;     //  Pop above siblings
@zi-active:             30;     //  Pop above selected siblings
@zi-navigation:         1000;   //  Navigation Bars
@zi-navigation-fixed:   1050;   //  Fixed navigation bars
@zi-dropdown:           2000;   //  Dropdowns
@zi-popovers:           3000;   //  Popovers, Popups, Autocompletes
@zi-tooltips:           4000;   //  Tooltips
@zi-banners:            5000;   //  Banners
@zi-modals:             9000;   //  Modals
@zi-modals-background:  @zi-modals - 50;


//  ============================================================================
//  $   BORDER RADIUS (br-)
//  ----------------------------------------------------------------------------
@br-sm:                 3px;
@br-md:                 5px;
@br-lg:                 7px;
@br-circle:             50%;


//  ============================================================================
//  $   BOX SHADOW (bs-)
//  ----------------------------------------------------------------------------
@bs-sm:                 0 @su2 @su8 fade(@black-700, 10%);
@bs-md:                 0 @su4 @su8 fade(@black-700, 20%);
@bs-lg:                 0 @su4 @su12 fade(@black-800, 20%);
@bs-i-sm:               inset 0 @su2/2 @su8 0 fade(@black-700, 10%);
@bs-i-md:               inset 0 @su2/2 @su8 0 fade(@black-700, 20%);
@bs-i-lg:               inset 0 @su2/2 @su12 0 fade(@black-800, 20%);


//  ============================================================================
//  $  SPACING UNITS (su-)
//  ----------------------------------------------------------------------------
@su2:                   2px;
@su4:                   4px;
@su6:                   6px;
@su8:                   8px;
@su12:                  12px;
@su16:                  16px;
@su24:                  24px;
@su32:                  32px;
@su48:                  48px;
@su64:                  64px;


//  ============================================================================
//  $  SIZING UNITS (su-)
//  ----------------------------------------------------------------------------
@s-full: 97.2307692rem; // Based on a pixel size of 1264px;
@s-step: @s-full / 12;

// TODO These helpers allow us to create our own timing functions with
// cubic-bezier ~ but perhaps the default timing functions are acceptable?

//  ============================================================================
//  $   TRANSITION EASINGS (te-)
//  ----------------------------------------------------------------------------
@te-smooth-slow:        cubic-bezier(0.25, 0.46, 0.45, 0.94);       // easeOutQuad
@te-smooth:             cubic-bezier(0.165, 0.84, 0.44, 1);         // easeOutQuart
@te-smooth-quick:       cubic-bezier(0.19, 1, 0.22, 1);             // easeOutExpo
@te-back-out:           cubic-bezier(0.175, 0.885, 0.32, 1.275);    // easeOutBack
@te-back-in-out:        cubic-bezier(0.68, -0.55, 0.265, 1.55);     // easeInOutBack
@te-ease-in:            cubic-bezier(0.47, 0, 0.745, 0.715);        // easeIn
@te-ease-in-out:        cubic-bezier(0.445, 0.05, 0.55, 0.95);      // easeInOut
@te-ease-out:           cubic-bezier(0.39, 0.575, 0.565, 1);        // easeOut

@default-transition-duration:       0.1s;
@transition-time:                   @default-transition-duration;
