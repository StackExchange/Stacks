//
//  STACK OVERFLOW
//  MIXINS
//
//  This CSS comes from Stacks, our CSS & Pattern library for rapidly building
//  Stack Overflow. For documentation of all these classes and how to contribute,
//  visit https://stackoverflow.design/
//
//  ============================================================================
//  $   Clearfix
//  -----------------------------------------------------------------------------
.clearfix() {
    &:before,
    &:after {
        content: "";
        display: table;
    }
    &:after { clear: both; }
}


//  ===========================================================================
//  --  APPEARANCE
//      Use this to overwrite the default appearance properties
//  ---------------------------------------------------------------------------
.appearance(@all) {
    -webkit-appearance: @all;
       -moz-appearance: @all;
            appearance: @all;
}

//  ===========================================================================
//  --  FOCUS VISIBLE
//      Powered by https://github.com/WICG/focus-visible while we wait for better
//      :focus-visible support
//  ---------------------------------------------------------------------------
.focus(@rules) {
    // This will hide the focus indicator if the element receives focus via the mouse
    .js-focus-visible & {
        &:focus:not(.focus-visible) {
            outline: none;
        }
    }

    // Adds a strong focus indicator for keyboard focus.
    .js-focus-visible & {
        &.focus-visible {
            outline: none;
            @rules();
        }
    }
}

//  ===========================================================================
//  --  FONT FACE
//      Used to load hosted, custom webfonts. You must provide the font's
//      full file path in the mixin. All modern browsers the WOFF file format.
//      Will automaticall add various local()s to try using already-installed
//      fonts before downloading.
//  ---------------------------------------------------------------------------
.font-face(@family, @path, @weight, @style) {
    @font-face {
        font-family: "@{family}";
        font-style: @style;
        font-weight: @weight;
        & when (@style=italic) {
            #stacks-internals #font-face-src(@family, @path, @weight, " Italic");
        }
        & when not (@style=italic) {
            #stacks-internals #font-face-src(@family, @path, @weight, "");
        }
    }
}

//  ===========================================================================
//  Internals only beyond this point -- helpers for .font-face()
//  ---------------------------------------------------------------------------


#stacks-internals() {

    // Generate all common variants for local names that this font face may have.
    // The CSS spec (Font Module Level 3, Section 4.3) says to use "only the Postscript
    // name or the full font name".
    // For example, given the family "Comic Sans MS", weight 800, italic, we're
    // trying these local names:
    //
    // - Comic Sans MS Extra Bold Italic
    // - ComicSansMS-ExtraBoldItalic
    // - Comic Sans MS 800 Italic
    // - ComicSansMS-800Italic
    //
    // For the weight 400 we also include the un-weight-postfixed name ("Comic Sans MS Italic").

    #font-face-src(@family, @path, @weight, @style-postfix) {
        @index: round(@weight/100);
        @weight-names: "Thin", "Extra Light", "Light", "Regular", "Medium", "Semi Bold", "Bold", "Extra Bold", "Black";
        @weight-name: extract(@weight-names, @index);
        #stacks-internals #font-face-src-postfix(@family, @path, "@{weight-name}", @weight, @style-postfix);
    }

    #font-face-src-postfix(@family, @path, @postfix-name, @postfix-number, @style-postfix) {
        @family-nospace: replace(@family, " ", "");
        @postfix-name-nospace: replace("@{postfix-name}@{style-postfix}", " ", "");
        @postfix-number-nospace: replace("@{postfix-number}@{style-postfix}", " ", "");

        & when (@postfix-name="Regular") {
            src: local("@{family} @{postfix-name}@{style-postfix}"), local("@{family-nospace}-@{postfix-name-nospace}"), local("@{family} @{postfix-number}@{style-postfix}"), local("@{family-nospace}-@{postfix-number-nospace}"), local("@{family}@{style-postfix}"), @path format("woff");
        }

        & when not (@postfix-name="Regular") {
            src: local("@{family} @{postfix-name}@{style-postfix}"), local("@{family-nospace}-@{postfix-name-nospace}"), local("@{family} @{postfix-number}@{style-postfix}"), local("@{family-nospace}-@{postfix-number-nospace}"), @path format("woff");
        }
    }
}
